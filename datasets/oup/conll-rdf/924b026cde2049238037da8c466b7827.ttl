# <doc title="ARA p7" url="https://autoweek.com/content/objects/paragraph/ara-p7" genre="N/A" domain="N/A" country="United States of America" city="N/A" content_source="EventRegistry" document_source="autoweek.com" time_of_publication="2019-03-01" month_of_publication="2019-03" time_of_crawling="2019-03" primary_doc_id="924b026cde2049238037da8c466b7827">
@prefix : <https://github.com/txellgb/sdllod19/datasets/oup/conll-rdf/924b026cde2049238037da8c466b7827#> .
@prefix terms: <http://purl.org/acoli/open-ie/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix conll: <http://ufal.mff.cuni.cz/conll2009-st/task-description.html#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix nif: <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
:s1_0 a nif:Sentence .
:s1_1 a nif:Word; conll:WORD "The"; conll:TOKEN "The"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_2 .
:s1_2 a nif:Word; conll:WORD "top-spec"; conll:TOKEN "top-spec"; conll:LEMMA "top-spec"; conll:LEMPOS "top-spec-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_3 .
:s1_3 a nif:Word; conll:WORD "rally"; conll:TOKEN "rally"; conll:LEMMA "rally"; conll:LEMPOS "rally-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_4 .
:s1_4 a nif:Word; conll:WORD "class"; conll:TOKEN "class"; conll:LEMMA "class"; conll:LEMPOS "class-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_5 .
:s1_5 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_6 .
:s1_6 a nif:Word; conll:WORD "New"; conll:TOKEN "New"; conll:LEMMA "New"; conll:LEMPOS "New-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_7 .
:s1_7 a nif:Word; conll:WORD "Zealand"; conll:TOKEN "Zealand"; conll:LEMMA "Zealand"; conll:LEMPOS "Zealand-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_8 .
:s1_8 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_9 .
:s1_9 a nif:Word; conll:WORD "Australian"; conll:TOKEN "Australian"; conll:LEMMA "australian"; conll:LEMPOS "australian-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_10 .
:s1_10 a nif:Word; conll:WORD "national"; conll:TOKEN "national"; conll:LEMMA "national"; conll:LEMPOS "national-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_11 .
:s1_11 a nif:Word; conll:WORD "rallies"; conll:TOKEN "rallies"; conll:LEMMA "rally"; conll:LEMPOS "rally-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_12 .
:s1_12 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_13 .
:s1_13 a nif:Word; conll:WORD "AP-4"; conll:TOKEN "AP-4"; conll:LEMMA "ap-4"; conll:LEMPOS "ap-4-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_14 .
:s1_14 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_15 .
:s1_15 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_16 .
:s1_16 a nif:Word; conll:WORD "locally-made"; conll:TOKEN "locally-made"; conll:LEMMA "locally-made"; conll:LEMPOS "locally-made-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_17 .
:s1_17 a nif:Word; conll:WORD "alternative"; conll:TOKEN "alternative"; conll:LEMMA "alternative"; conll:LEMPOS "alternative-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_18 .
:s1_18 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_19 .
:s1_19 a nif:Word; conll:WORD "R5-spec"; conll:TOKEN "R5-spec"; conll:LEMMA "r5-spec"; conll:LEMPOS "r5-spec-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_20 .
:s1_20 a nif:Word; conll:WORD "rally"; conll:TOKEN "rally"; conll:LEMMA "rally"; conll:LEMPOS "rally-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_21 .
:s1_21 a nif:Word; conll:WORD "cars"; conll:TOKEN "cars"; conll:LEMMA "car"; conll:LEMPOS "car-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_22 .
:s1_22 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_23 .
:s1_23 a nif:Word; conll:WORD "Vehicles"; conll:TOKEN "Vehicles"; conll:LEMMA "Vehicles"; conll:LEMPOS "Vehicles-e"; conll:HEAD :s1_0; conll:POS "NNPS"; nif:nextWord :s1_24 .
:s1_24 a nif:Word; conll:WORD "made"; conll:TOKEN "made"; conll:LEMMA "make"; conll:LEMPOS "make-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_25 .
:s1_25 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_26 .
:s1_26 a nif:Word; conll:WORD "AP-4"; conll:TOKEN "AP-4"; conll:LEMMA "ap-4"; conll:LEMPOS "ap-4-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_27 .
:s1_27 a nif:Word; conll:WORD "rules"; conll:TOKEN "rules"; conll:LEMMA "rule"; conll:LEMPOS "rule-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_28 .
:s1_28 a nif:Word; conll:WORD "are"; conll:TOKEN "are"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_29 .
:s1_29 a nif:Word; conll:WORD "just"; conll:TOKEN "just"; conll:LEMMA "just"; conll:LEMPOS "just-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_30 .
:s1_30 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_31 .
:s1_31 a nif:Word; conll:WORD "quick"; conll:TOKEN "quick"; conll:LEMMA "quick"; conll:LEMPOS "quick-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_32 .
:s1_32 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_33 .
:s1_33 a nif:Word; conll:WORD "European"; conll:TOKEN "European"; conll:LEMMA "european"; conll:LEMPOS "european-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_34 .
:s1_34 a nif:Word; conll:WORD "R5"; conll:TOKEN "R5"; conll:LEMMA "r5"; conll:LEMPOS "r5-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_35 .
:s1_35 a nif:Word; conll:WORD "machines"; conll:TOKEN "machines"; conll:LEMMA "machine"; conll:LEMPOS "machine-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_36 .
:s1_36 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_37 .
:s1_37 a nif:Word; conll:WORD "but"; conll:TOKEN "but"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_38 .
:s1_38 a nif:Word; conll:WORD "they"; conll:TOKEN "they"; conll:LEMMA "they"; conll:LEMPOS "they-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_39 .
:s1_39 a nif:Word; conll:WORD "avoid"; conll:TOKEN "avoid"; conll:LEMMA "avoid"; conll:LEMPOS "avoid-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_40 .
:s1_40 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_41 .
:s1_41 a nif:Word; conll:WORD "import"; conll:TOKEN "import"; conll:LEMMA "import"; conll:LEMPOS "import-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_42 .
:s1_42 a nif:Word; conll:WORD "fees"; conll:TOKEN "fees"; conll:LEMMA "fee"; conll:LEMPOS "fee-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_43 .
:s1_43 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_44 .
:s1_44 a nif:Word; conll:WORD "tariffs"; conll:TOKEN "tariffs"; conll:LEMMA "tariff"; conll:LEMPOS "tariff-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_45 .
:s1_45 a nif:Word; conll:WORD "associated"; conll:TOKEN "associated"; conll:LEMMA "associate"; conll:LEMPOS "associate-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_46 .
:s1_46 a nif:Word; conll:WORD "with"; conll:TOKEN "with"; conll:LEMMA "with"; conll:LEMPOS "with-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_47 .
:s1_47 a nif:Word; conll:WORD "bringing"; conll:TOKEN "bringing"; conll:LEMMA "bring"; conll:LEMPOS "bring-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_48 .
:s1_48 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_49 .
:s1_49 a nif:Word; conll:WORD "car"; conll:TOKEN "car"; conll:LEMMA "car"; conll:LEMPOS "car-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_50 .
:s1_50 a nif:Word; conll:WORD "into"; conll:TOKEN "into"; conll:LEMMA "into"; conll:LEMPOS "into-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_51 .
:s1_51 a nif:Word; conll:WORD "Oceania"; conll:TOKEN "Oceania"; conll:LEMMA "Oceania"; conll:LEMPOS "Oceania-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_52 .
:s1_52 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_53 .
:s1_53 a nif:Word; conll:WORD "The"; conll:TOKEN "The"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_54 .
:s1_54 a nif:Word; conll:WORD "AP-4"; conll:TOKEN "AP-4"; conll:LEMMA "ap-4"; conll:LEMPOS "ap-4-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_55 .
:s1_55 a nif:Word; conll:WORD "conversion"; conll:TOKEN "conversion"; conll:LEMMA "conversion"; conll:LEMPOS "conversion-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_56 .
:s1_56 a nif:Word; conll:WORD "kit"; conll:TOKEN "kit"; conll:LEMMA "kit"; conll:LEMPOS "kit-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_57 .
:s1_57 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_58 .
:s1_58 a nif:Word; conll:WORD "modular"; conll:TOKEN "modular"; conll:LEMMA "modular"; conll:LEMPOS "modular-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_59 .
:s1_59 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_60 .
:s1_60 a nif:Word; conll:WORD "can"; conll:TOKEN "can"; conll:LEMMA "can"; conll:LEMPOS "can-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_61 .
:s1_61 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_62 .
:s1_62 a nif:Word; conll:WORD "applied"; conll:TOKEN "applied"; conll:LEMMA "apply"; conll:LEMPOS "apply-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_63 .
:s1_63 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_64 .
:s1_64 a nif:Word; conll:WORD "nearly"; conll:TOKEN "nearly"; conll:LEMMA "nearly"; conll:LEMPOS "nearly-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_65 .
:s1_65 a nif:Word; conll:WORD "any"; conll:TOKEN "any"; conll:LEMMA "any"; conll:LEMPOS "any-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_66 .
:s1_66 a nif:Word; conll:WORD "car"; conll:TOKEN "car"; conll:LEMMA "car"; conll:LEMPOS "car-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_67 .
:s1_67 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_68 .
:s1_68 a nif:Word; conll:WORD "even"; conll:TOKEN "even"; conll:LEMMA "even"; conll:LEMPOS "even-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_69 .
:s1_69 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_70 .
:s1_70 a nif:Word; conll:WORD "mid-sized"; conll:TOKEN "mid-sized"; conll:LEMMA "mid-sized"; conll:LEMPOS "mid-sized-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_71 .
:s1_71 a nif:Word; conll:WORD "SUV"; conll:TOKEN "SUV"; conll:LEMMA "suv"; conll:LEMPOS "suv-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_72 .
:s1_72 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_73 .
:s1_73 a nif:Word; conll:WORD "Ryan"; conll:TOKEN "Ryan"; conll:LEMMA "Ryan"; conll:LEMPOS "Ryan-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_74 .
:s1_74 a nif:Word; conll:WORD "Millen"; conll:TOKEN "Millen"; conll:LEMMA "Millen"; conll:LEMPOS "Millen-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_75 .
:s1_75 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_76 .
:s1_76 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_77 .
:s1_77 a nif:Word; conll:WORD "ARA"; conll:TOKEN "ARA"; conll:LEMMA "ARA"; conll:LEMPOS "ARA-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_78 .
:s1_78 a nif:Word; conll:WORD "2WD"; conll:TOKEN "2WD"; conll:LEMMA "2wd"; conll:LEMPOS "2wd-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_79 .
:s1_79 a nif:Word; conll:WORD "class"; conll:TOKEN "class"; conll:LEMMA "class"; conll:LEMPOS "class-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_80 .
:s1_80 a nif:Word; conll:WORD "champion"; conll:TOKEN "champion"; conll:LEMMA "champion"; conll:LEMPOS "champion-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_81 .
:s1_81 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_82 .
:s1_82 a nif:Word; conll:WORD "2017"; conll:TOKEN "2017"; conll:LEMMA "2017"; conll:LEMPOS "2017-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_83 .
:s1_83 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_84 .
:s1_84 a nif:Word; conll:WORD "was"; conll:TOKEN "was"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_85 .
:s1_85 a nif:Word; conll:WORD "left"; conll:TOKEN "left"; conll:LEMMA "leave"; conll:LEMPOS "leave-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_86 .
:s1_86 a nif:Word; conll:WORD "out"; conll:TOKEN "out"; conll:LEMMA "out"; conll:LEMPOS "out-x"; conll:HEAD :s1_0; conll:POS "RP"; nif:nextWord :s1_87 .
:s1_87 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_88 .
:s1_88 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_89 .
:s1_89 a nif:Word; conll:WORD "cold"; conll:TOKEN "cold"; conll:LEMMA "cold"; conll:LEMPOS "cold-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_90 .
:s1_90 a nif:Word; conll:WORD "after"; conll:TOKEN "after"; conll:LEMMA "after"; conll:LEMPOS "after-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_91 .
:s1_91 a nif:Word; conll:WORD "Toyota"; conll:TOKEN "Toyota"; conll:LEMMA "Toyota"; conll:LEMPOS "Toyota-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_92 .
:s1_92 a nif:Word; conll:WORD "pulled"; conll:TOKEN "pulled"; conll:LEMMA "pull"; conll:LEMPOS "pull-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_93 .
:s1_93 a nif:Word; conll:WORD "their"; conll:TOKEN "their"; conll:LEMMA "they"; conll:LEMPOS "they-p"; conll:HEAD :s1_0; conll:POS "PRP$"; nif:nextWord :s1_94 .
:s1_94 a nif:Word; conll:WORD "factory"; conll:TOKEN "factory"; conll:LEMMA "factory"; conll:LEMPOS "factory-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_95 .
:s1_95 a nif:Word; conll:WORD "funding"; conll:TOKEN "funding"; conll:LEMMA "funding"; conll:LEMPOS "funding-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_96 .
:s1_96 a nif:Word; conll:WORD "at"; conll:TOKEN "at"; conll:LEMMA "at"; conll:LEMPOS "at-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_97 .
:s1_97 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_98 .
:s1_98 a nif:Word; conll:WORD "end"; conll:TOKEN "end"; conll:LEMMA "end"; conll:LEMPOS "end-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_99 .
:s1_99 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_100 .
:s1_100 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_101 .
:s1_101 a nif:Word; conll:WORD "year"; conll:TOKEN "year"; conll:LEMMA "year"; conll:LEMPOS "year-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_102 .
:s1_102 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_103 .
:s1_103 a nif:Word; conll:WORD "But"; conll:TOKEN "But"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_104 .
:s1_104 a nif:Word; conll:WORD "Millen"; conll:TOKEN "Millen"; conll:LEMMA "Millen"; conll:LEMPOS "Millen-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_105 .
:s1_105 a nif:Word; conll:WORD "still"; conll:TOKEN "still"; conll:LEMMA "still"; conll:LEMPOS "still-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_106 .
:s1_106 a nif:Word; conll:WORD "had"; conll:TOKEN "had"; conll:LEMMA "have"; conll:LEMPOS "have-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_107 .
:s1_107 a nif:Word; conll:WORD "his"; conll:TOKEN "his"; conll:LEMMA "he"; conll:LEMPOS "he-p"; conll:HEAD :s1_0; conll:POS "PRP$"; nif:nextWord :s1_108 .
:s1_108 a nif:Word; conll:WORD "equipment"; conll:TOKEN "equipment"; conll:LEMMA "equipment"; conll:LEMPOS "equipment-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_109 .
:s1_109 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_110 .
:s1_110 a nif:Word; conll:WORD "so"; conll:TOKEN "so"; conll:LEMMA "so"; conll:LEMPOS "so-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_111 .
:s1_111 a nif:Word; conll:WORD "he"; conll:TOKEN "he"; conll:LEMMA "he"; conll:LEMPOS "he-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_112 .
:s1_112 a nif:Word; conll:WORD "shipped"; conll:TOKEN "shipped"; conll:LEMMA "ship"; conll:LEMPOS "ship-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_113 .
:s1_113 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_114 .
:s1_114 a nif:Word; conll:WORD "spare"; conll:TOKEN "spare"; conll:LEMMA "spare"; conll:LEMPOS "spare-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_115 .
:s1_115 a nif:Word; conll:WORD "Rav4"; conll:TOKEN "Rav4"; conll:LEMMA "rav4"; conll:LEMPOS "rav4-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_116 .
:s1_116 a nif:Word; conll:WORD "shell"; conll:TOKEN "shell"; conll:LEMMA "shell"; conll:LEMPOS "shell-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_117 .
:s1_117 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_118 .
:s1_118 a nif:Word; conll:WORD "Force"; conll:TOKEN "Force"; conll:LEMMA "Force"; conll:LEMPOS "Force-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_119 .
:s1_119 a nif:Word; conll:WORD "Motorsport"; conll:TOKEN "Motorsport"; conll:LEMMA "Motorsport"; conll:LEMPOS "Motorsport-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_120 .
:s1_120 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_121 .
:s1_121 a nif:Word; conll:WORD "New"; conll:TOKEN "New"; conll:LEMMA "New"; conll:LEMPOS "New-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_122 .
:s1_122 a nif:Word; conll:WORD "Zealand"; conll:TOKEN "Zealand"; conll:LEMMA "Zealand"; conll:LEMPOS "Zealand-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_123 .
:s1_123 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_124 .
:s1_124 a nif:Word; conll:WORD "had"; conll:TOKEN "had"; conll:LEMMA "have"; conll:LEMPOS "have-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_125 .
:s1_125 a nif:Word; conll:WORD "them"; conll:TOKEN "them"; conll:LEMMA "they"; conll:LEMPOS "they-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_126 .
:s1_126 a nif:Word; conll:WORD "get"; conll:TOKEN "get"; conll:LEMMA "get"; conll:LEMPOS "get-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_127 .
:s1_127 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_128 .
:s1_128 a nif:Word; conll:WORD "work"; conll:TOKEN "work"; conll:LEMMA "work"; conll:LEMPOS "work-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_129 .
:s1_129 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_130 .
:s1_130 a nif:Word; conll:WORD "The"; conll:TOKEN "The"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_131 .
:s1_131 a nif:Word; conll:WORD "result"; conll:TOKEN "result"; conll:LEMMA "result"; conll:LEMPOS "result-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_132 .
:s1_132 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_133 .
:s1_133 a nif:Word; conll:WORD "an"; conll:TOKEN "an"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_134 .
:s1_134 a nif:Word; conll:WORD "SUV"; conll:TOKEN "SUV"; conll:LEMMA "suv"; conll:LEMPOS "suv-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_135 .
:s1_135 a nif:Word; conll:WORD "with"; conll:TOKEN "with"; conll:LEMMA "with"; conll:LEMPOS "with-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_136 .
:s1_136 a nif:Word; conll:WORD "AWD"; conll:TOKEN "AWD"; conll:LEMMA "AWD"; conll:LEMPOS "AWD-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_137 .
:s1_137 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_138 .
:s1_138 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_139 .
:s1_139 a nif:Word; conll:WORD "sequential"; conll:TOKEN "sequential"; conll:LEMMA "sequential"; conll:LEMPOS "sequential-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_140 .
:s1_140 a nif:Word; conll:WORD "transmission"; conll:TOKEN "transmission"; conll:LEMMA "transmission"; conll:LEMPOS "transmission-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_141 .
:s1_141 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_142 .
:s1_142 a nif:Word; conll:WORD "300-plus"; conll:TOKEN "300-plus"; conll:LEMMA "300-plus"; conll:LEMPOS "300-plus-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_143 .
:s1_143 a nif:Word; conll:WORD "turbocharged"; conll:TOKEN "turbocharged"; conll:LEMMA "turbocharged"; conll:LEMPOS "turbocharged-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_144 .
:s1_144 a nif:Word; conll:WORD "horses"; conll:TOKEN "horses"; conll:LEMMA "horse"; conll:LEMPOS "horse-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_145 .
:s1_145 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_146 .
:s1_146 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_147 .
:s1_147 a nif:Word; conll:WORD "oodles"; conll:TOKEN "oodles"; conll:LEMMA "oodles"; conll:LEMPOS "oodles-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_148 .
:s1_148 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_149 .
:s1_149 a nif:Word; conll:WORD "suspension"; conll:TOKEN "suspension"; conll:LEMMA "suspension"; conll:LEMPOS "suspension-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_150 .
:s1_150 a nif:Word; conll:WORD "travel"; conll:TOKEN "travel"; conll:LEMMA "travel"; conll:LEMPOS "travel-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_151 .
:s1_151 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "." .

