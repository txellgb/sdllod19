# <doc title="Medicare for All Would Actually Be a Government Takeover of Health Care" url="https://reason.com/blog/2019/02/28/medicare-for-all-government-takeover" genre="N/A" domain="N/A" country="United States of America" city="N/A" content_source="EventRegistry" document_source="reason.com" time_of_publication="2019-03-01" month_of_publication="2019-03" time_of_crawling="2019-03" primary_doc_id="b65e089a584047419d8b5319fc654b75">
@prefix : <https://github.com/txellgb/sdllod19/datasets/oup/conll-rdf/b65e089a584047419d8b5319fc654b75#> .
@prefix terms: <http://purl.org/acoli/open-ie/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix conll: <http://ufal.mff.cuni.cz/conll2009-st/task-description.html#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix nif: <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
:s1_0 a nif:Sentence .
:s1_1 a nif:Word; conll:WORD "House"; conll:TOKEN "House"; conll:LEMMA "House"; conll:LEMPOS "House-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_2 .
:s1_2 a nif:Word; conll:WORD "Democrats"; conll:TOKEN "Democrats"; conll:LEMMA "Democrats"; conll:LEMPOS "Democrats-e"; conll:HEAD :s1_0; conll:POS "NNPS"; nif:nextWord :s1_3 .
:s1_3 a nif:Word; conll:WORD "'"; conll:TOKEN "'"; conll:LEMMA "'"; conll:LEMPOS "'-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_4 .
:s1_4 a nif:Word; conll:WORD "new"; conll:TOKEN "new"; conll:LEMMA "new"; conll:LEMPOS "new-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_5 .
:s1_5 a nif:Word; conll:WORD "single-payer"; conll:TOKEN "single-payer"; conll:LEMMA "single-payer"; conll:LEMPOS "single-payer-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_6 .
:s1_6 a nif:Word; conll:WORD "bill"; conll:TOKEN "bill"; conll:LEMMA "bill"; conll:LEMPOS "bill-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_7 .
:s1_7 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_8 .
:s1_8 a nif:Word; conll:WORD "legally"; conll:TOKEN "legally"; conll:LEMMA "legally"; conll:LEMPOS "legally-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_9 .
:s1_9 a nif:Word; conll:WORD "prohibit"; conll:TOKEN "prohibit"; conll:LEMMA "prohibit"; conll:LEMPOS "prohibit-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_10 .
:s1_10 a nif:Word; conll:WORD "today"; conll:TOKEN "today"; conll:LEMMA "today"; conll:LEMPOS "today-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_11 .
:s1_11 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_12 .
:s1_12 a nif:Word; conll:WORD "private"; conll:TOKEN "private"; conll:LEMMA "private"; conll:LEMPOS "private-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_13 .
:s1_13 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_14 .
:s1_14 a nif:Word; conll:WORD "insurance"; conll:TOKEN "insurance"; conll:LEMMA "insurance"; conll:LEMPOS "insurance-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_15 .
:s1_15 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_16 .
:s1_16 a nif:Word; conll:WORD "determine"; conll:TOKEN "determine"; conll:LEMMA "determine"; conll:LEMPOS "determine-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_17 .
:s1_17 a nif:Word; conll:WORD "financing"; conll:TOKEN "financing"; conll:LEMMA "financing"; conll:LEMPOS "financing-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_18 .
:s1_18 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_19 .
:s1_19 a nif:Word; conll:WORD "doctors"; conll:TOKEN "doctors"; conll:LEMMA "doctor"; conll:LEMPOS "doctor-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_20 .
:s1_20 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_21 .
:s1_21 a nif:Word; conll:WORD "hospitals"; conll:TOKEN "hospitals"; conll:LEMMA "hospital"; conll:LEMPOS "hospital-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_22 .
:s1_22 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_23 .
:s1_23 a nif:Word; conll:WORD "ARON"; conll:TOKEN "ARON"; conll:LEMMA "ARON"; conll:LEMPOS "ARON-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_24 .
:s1_24 a nif:Word; conll:WORD "P."; conll:TOKEN "P."; conll:LEMMA "P."; conll:LEMPOS "P.-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_25 .
:s1_25 a nif:Word; conll:WORD "BERNSTEIN/REUTERS/NewscomA"; conll:TOKEN "BERNSTEIN/REUTERS/NewscomA"; conll:LEMMA "BERNSTEIN/REUTERS/NewscomA"; conll:LEMPOS "BERNSTEIN/REUTERS/NewscomA-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_26 .
:s1_26 a nif:Word; conll:WORD "decade"; conll:TOKEN "decade"; conll:LEMMA "decade"; conll:LEMPOS "decade-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_27 .
:s1_27 a nif:Word; conll:WORD "ago"; conll:TOKEN "ago"; conll:LEMMA "ago"; conll:LEMPOS "ago-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_28 .
:s1_28 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_29 .
:s1_29 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_30 .
:s1_30 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_31 .
:s1_31 a nif:Word; conll:WORD "legislation"; conll:TOKEN "legislation"; conll:LEMMA "legislation"; conll:LEMPOS "legislation-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_32 .
:s1_32 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-d"; conll:HEAD :s1_0; conll:POS "WDT"; nif:nextWord :s1_33 .
:s1_33 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_34 .
:s1_34 a nif:Word; conll:WORD "become"; conll:TOKEN "become"; conll:LEMMA "become"; conll:LEMPOS "become-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_35 .
:s1_35 a nif:Word; conll:WORD "Obamacare"; conll:TOKEN "Obamacare"; conll:LEMMA "Obamacare"; conll:LEMPOS "Obamacare-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_36 .
:s1_36 a nif:Word; conll:WORD "was"; conll:TOKEN "was"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_37 .
:s1_37 a nif:Word; conll:WORD "making"; conll:TOKEN "making"; conll:LEMMA "make"; conll:LEMPOS "make-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_38 .
:s1_38 a nif:Word; conll:WORD "its"; conll:TOKEN "its"; conll:LEMMA "its"; conll:LEMPOS "its-p"; conll:HEAD :s1_0; conll:POS "PRP$"; nif:nextWord :s1_39 .
:s1_39 a nif:Word; conll:WORD "way"; conll:TOKEN "way"; conll:LEMMA "way"; conll:LEMPOS "way-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_40 .
:s1_40 a nif:Word; conll:WORD "through"; conll:TOKEN "through"; conll:LEMMA "through"; conll:LEMPOS "through-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_41 .
:s1_41 a nif:Word; conll:WORD "Congress"; conll:TOKEN "Congress"; conll:LEMMA "Congress"; conll:LEMPOS "Congress-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_42 .
:s1_42 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_43 .
:s1_43 a nif:Word; conll:WORD "Republicans"; conll:TOKEN "Republicans"; conll:LEMMA "Republicans"; conll:LEMPOS "Republicans-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_44 .
:s1_44 a nif:Word; conll:WORD "frequently"; conll:TOKEN "frequently"; conll:LEMMA "frequently"; conll:LEMPOS "frequently-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_45 .
:s1_45 a nif:Word; conll:WORD "blasted"; conll:TOKEN "blasted"; conll:LEMMA "blast"; conll:LEMPOS "blast-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_46 .
:s1_46 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_47 .
:s1_47 a nif:Word; conll:WORD "Democrats"; conll:TOKEN "Democrats"; conll:LEMMA "Democrats"; conll:LEMPOS "Democrats-e"; conll:HEAD :s1_0; conll:POS "NNPS"; nif:nextWord :s1_48 .
:s1_48 a nif:Word; conll:WORD "'"; conll:TOKEN "'"; conll:LEMMA "'"; conll:LEMPOS "'-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_49 .
:s1_49 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_50 .
:s1_50 a nif:Word; conll:WORD "plan"; conll:TOKEN "plan"; conll:LEMMA "plan"; conll:LEMPOS "plan-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_51 .
:s1_51 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_52 .
:s1_52 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_53 .
:s1_53 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "``"; conll:LEMMA "``"; conll:LEMPOS "``-x"; conll:HEAD :s1_0; conll:POS "``"; nif:nextWord :s1_54 .
:s1_54 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_55 .
:s1_55 a nif:Word; conll:WORD "takeover"; conll:TOKEN "takeover"; conll:LEMMA "takeover"; conll:LEMPOS "takeover-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_56 .
:s1_56 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_57 .
:s1_57 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_58 .
:s1_58 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_59 .
:s1_59 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_60 .
:s1_60 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "''"; conll:LEMMA "''"; conll:LEMPOS "''-x"; conll:HEAD :s1_0; conll:POS "''"; nif:nextWord :s1_61 .
:s1_61 a nif:Word; conll:WORD "That"; conll:TOKEN "That"; conll:LEMMA "that"; conll:LEMPOS "that-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_62 .
:s1_62 a nif:Word; conll:WORD "phrase"; conll:TOKEN "phrase"; conll:LEMMA "phrase"; conll:LEMPOS "phrase-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_63 .
:s1_63 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_64 .
:s1_64 a nif:Word; conll:WORD "introduced"; conll:TOKEN "introduced"; conll:LEMMA "introduce"; conll:LEMPOS "introduce-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_65 .
:s1_65 a nif:Word; conll:WORD "into"; conll:TOKEN "into"; conll:LEMMA "into"; conll:LEMPOS "into-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_66 .
:s1_66 a nif:Word; conll:WORD "circulation"; conll:TOKEN "circulation"; conll:LEMMA "circulation"; conll:LEMPOS "circulation-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_67 .
:s1_67 a nif:Word; conll:WORD "by"; conll:TOKEN "by"; conll:LEMMA "by"; conll:LEMPOS "by-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_68 .
:s1_68 a nif:Word; conll:WORD "GOP"; conll:TOKEN "GOP"; conll:LEMMA "GOP"; conll:LEMPOS "GOP-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_69 .
:s1_69 a nif:Word; conll:WORD "messaging"; conll:TOKEN "messaging"; conll:LEMMA "message"; conll:LEMPOS "message-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_70 .
:s1_70 a nif:Word; conll:WORD "guru"; conll:TOKEN "guru"; conll:LEMMA "guru"; conll:LEMPOS "guru-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_71 .
:s1_71 a nif:Word; conll:WORD "Frank"; conll:TOKEN "Frank"; conll:LEMMA "Frank"; conll:LEMPOS "Frank-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_72 .
:s1_72 a nif:Word; conll:WORD "Luntz"; conll:TOKEN "Luntz"; conll:LEMMA "Luntz"; conll:LEMPOS "Luntz-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_73 .
:s1_73 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_74 .
:s1_74 a nif:Word; conll:WORD "was"; conll:TOKEN "was"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_75 .
:s1_75 a nif:Word; conll:WORD "eventually"; conll:TOKEN "eventually"; conll:LEMMA "eventually"; conll:LEMPOS "eventually-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_76 .
:s1_76 a nif:Word; conll:WORD "awarded"; conll:TOKEN "awarded"; conll:LEMMA "award"; conll:LEMPOS "award-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_77 .
:s1_77 a nif:Word; conll:WORD "Politifact"; conll:TOKEN "Politifact"; conll:LEMMA "Politifact"; conll:LEMPOS "Politifact-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_78 .
:s1_78 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_79 .
:s1_79 a nif:Word; conll:WORD "Lie"; conll:TOKEN "Lie"; conll:LEMMA "lie"; conll:LEMPOS "lie-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_80 .
:s1_80 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_81 .
:s1_81 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_82 .
:s1_82 a nif:Word; conll:WORD "Year"; conll:TOKEN "Year"; conll:LEMMA "year"; conll:LEMPOS "year-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_83 .
:s1_83 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_84 .
:s1_84 a nif:Word; conll:WORD "One"; conll:TOKEN "One"; conll:LEMMA "one"; conll:LEMPOS "one-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_85 .
:s1_85 a nif:Word; conll:WORD "could"; conll:TOKEN "could"; conll:LEMMA "could"; conll:LEMPOS "could-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_86 .
:s1_86 a nif:Word; conll:WORD "argue"; conll:TOKEN "argue"; conll:LEMMA "argue"; conll:LEMPOS "argue-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_87 .
:s1_87 a nif:Word; conll:WORD "about"; conll:TOKEN "about"; conll:LEMMA "about"; conll:LEMPOS "about-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_88 .
:s1_88 a nif:Word; conll:WORD "whether"; conll:TOKEN "whether"; conll:LEMMA "whether"; conll:LEMPOS "whether-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_89 .
:s1_89 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_90 .
:s1_90 a nif:Word; conll:WORD "GOP"; conll:TOKEN "GOP"; conll:LEMMA "GOP"; conll:LEMPOS "GOP-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_91 .
:s1_91 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_92 .
:s1_92 a nif:Word; conll:WORD "attack"; conll:TOKEN "attack"; conll:LEMMA "attack"; conll:LEMPOS "attack-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_93 .
:s1_93 a nif:Word; conll:WORD "was"; conll:TOKEN "was"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_94 .
:s1_94 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_95 .
:s1_95 a nif:Word; conll:WORD "most"; conll:TOKEN "most"; conll:LEMMA "most"; conll:LEMPOS "most-r"; conll:HEAD :s1_0; conll:POS "RBS"; nif:nextWord :s1_96 .
:s1_96 a nif:Word; conll:WORD "significant"; conll:TOKEN "significant"; conll:LEMMA "significant"; conll:LEMPOS "significant-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_97 .
:s1_97 a nif:Word; conll:WORD "lie"; conll:TOKEN "lie"; conll:LEMMA "lie"; conll:LEMPOS "lie-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_98 .
:s1_98 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_99 .
:s1_99 a nif:Word; conll:WORD "2010"; conll:TOKEN "2010"; conll:LEMMA "2010"; conll:LEMPOS "2010-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_100 .
:s1_100 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_101 .
:s1_101 a nif:Word; conll:WORD "but"; conll:TOKEN "but"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_102 .
:s1_102 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_103 .
:s1_103 a nif:Word; conll:WORD "was"; conll:TOKEN "was"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_104 .
:s1_104 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_105 .
:s1_105 a nif:Word; conll:WORD "at"; conll:TOKEN "at"; conll:LEMMA "at"; conll:LEMPOS "at-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_106 .
:s1_106 a nif:Word; conll:WORD "minimum"; conll:TOKEN "minimum"; conll:LEMMA "minimum"; conll:LEMPOS "minimum-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_107 .
:s1_107 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_108 .
:s1_108 a nif:Word; conll:WORD "an"; conll:TOKEN "an"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_109 .
:s1_109 a nif:Word; conll:WORD "exaggeration"; conll:TOKEN "exaggeration"; conll:LEMMA "exaggeration"; conll:LEMPOS "exaggeration-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_110 .
:s1_110 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_111 .
:s1_111 a nif:Word; conll:WORD "Although"; conll:TOKEN "Although"; conll:LEMMA "although"; conll:LEMPOS "although-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_112 .
:s1_112 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_113 .
:s1_113 a nif:Word; conll:WORD "Affordable"; conll:TOKEN "Affordable"; conll:LEMMA "Affordable"; conll:LEMPOS "Affordable-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_114 .
:s1_114 a nif:Word; conll:WORD "Care"; conll:TOKEN "Care"; conll:LEMMA "Care"; conll:LEMPOS "Care-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_115 .
:s1_115 a nif:Word; conll:WORD "Act"; conll:TOKEN "Act"; conll:LEMMA "Act"; conll:LEMPOS "Act-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_116 .
:s1_116 a nif:Word; conll:WORD "increased"; conll:TOKEN "increased"; conll:LEMMA "increase"; conll:LEMPOS "increase-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_117 .
:s1_117 a nif:Word; conll:WORD "regulation"; conll:TOKEN "regulation"; conll:LEMMA "regulation"; conll:LEMPOS "regulation-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_118 .
:s1_118 a nif:Word; conll:WORD "on"; conll:TOKEN "on"; conll:LEMMA "on"; conll:LEMPOS "on-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_119 .
:s1_119 a nif:Word; conll:WORD "individual"; conll:TOKEN "individual"; conll:LEMMA "individual"; conll:LEMPOS "individual-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_120 .
:s1_120 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_121 .
:s1_121 a nif:Word; conll:WORD "insurance"; conll:TOKEN "insurance"; conll:LEMMA "insurance"; conll:LEMPOS "insurance-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_122 .
:s1_122 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_123 .
:s1_123 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_124 .
:s1_124 a nif:Word; conll:WORD "point"; conll:TOKEN "point"; conll:LEMMA "point"; conll:LEMPOS "point-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_125 .
:s1_125 a nif:Word; conll:WORD "where"; conll:TOKEN "where"; conll:LEMMA "where"; conll:LEMPOS "where-r"; conll:HEAD :s1_0; conll:POS "WRB"; nif:nextWord :s1_126 .
:s1_126 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_127 .
:s1_127 a nif:Word; conll:WORD "became"; conll:TOKEN "became"; conll:LEMMA "become"; conll:LEMPOS "become-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_128 .
:s1_128 a nif:Word; conll:WORD "something"; conll:TOKEN "something"; conll:LEMMA "something"; conll:LEMPOS "something-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_129 .
:s1_129 a nif:Word; conll:WORD "resembling"; conll:TOKEN "resembling"; conll:LEMMA "resemble"; conll:LEMPOS "resemble-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_130 .
:s1_130 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_131 .
:s1_131 a nif:Word; conll:WORD "public"; conll:TOKEN "public"; conll:LEMMA "public"; conll:LEMPOS "public-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_132 .
:s1_132 a nif:Word; conll:WORD "utility"; conll:TOKEN "utility"; conll:LEMMA "utility"; conll:LEMPOS "utility-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_133 .
:s1_133 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_134 .
:s1_134 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_135 .
:s1_135 a nif:Word; conll:WORD "left"; conll:TOKEN "left"; conll:LEMMA "leave"; conll:LEMPOS "leave-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_136 .
:s1_136 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_137 .
:s1_137 a nif:Word; conll:WORD "bulk"; conll:TOKEN "bulk"; conll:LEMMA "bulk"; conll:LEMPOS "bulk-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_138 .
:s1_138 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_139 .
:s1_139 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_140 .
:s1_140 a nif:Word; conll:WORD "market"; conll:TOKEN "market"; conll:LEMMA "market"; conll:LEMPOS "market-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_141 .
:s1_141 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_142 .
:s1_142 a nif:Word; conll:WORD "private"; conll:TOKEN "private"; conll:LEMMA "private"; conll:LEMPOS "private-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_143 .
:s1_143 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_144 .
:s1_144 a nif:Word; conll:WORD "coverage"; conll:TOKEN "coverage"; conll:LEMMA "coverage"; conll:LEMPOS "coverage-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_145 .
:s1_145 a nif:Word; conll:WORD "intact"; conll:TOKEN "intact"; conll:LEMMA "intact"; conll:LEMPOS "intact-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_146 .
:s1_146 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_147 .
:s1_147 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_148 .
:s1_148 a nif:Word; conll:WORD "even"; conll:TOKEN "even"; conll:LEMMA "even"; conll:LEMPOS "even-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_149 .
:s1_149 a nif:Word; conll:WORD "provided"; conll:TOKEN "provided"; conll:LEMMA "provide"; conll:LEMPOS "provide-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_150 .
:s1_150 a nif:Word; conll:WORD "subsidies"; conll:TOKEN "subsidies"; conll:LEMMA "subsidy"; conll:LEMPOS "subsidy-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_151 .
:s1_151 a nif:Word; conll:WORD "so"; conll:TOKEN "so"; conll:LEMMA "so"; conll:LEMPOS "so-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_152 .
:s1_152 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_153 .
:s1_153 a nif:Word; conll:WORD "people"; conll:TOKEN "people"; conll:LEMMA "people"; conll:LEMPOS "people-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_154 .
:s1_154 a nif:Word; conll:WORD "could"; conll:TOKEN "could"; conll:LEMMA "could"; conll:LEMPOS "could-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_155 .
:s1_155 a nif:Word; conll:WORD "obtain"; conll:TOKEN "obtain"; conll:LEMMA "obtain"; conll:LEMPOS "obtain-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_156 .
:s1_156 a nif:Word; conll:WORD "("; conll:TOKEN "-LRB-"; conll:LEMMA "-lrb-"; conll:LEMPOS "-lrb--x"; conll:HEAD :s1_0; conll:POS "-LRB-"; nif:nextWord :s1_157 .
:s1_157 a nif:Word; conll:WORD "heavily"; conll:TOKEN "heavily"; conll:LEMMA "heavily"; conll:LEMPOS "heavily-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_158 .
:s1_158 a nif:Word; conll:WORD "regulated"; conll:TOKEN "regulated"; conll:LEMMA "regulate"; conll:LEMPOS "regulate-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_159 .
:s1_159 a nif:Word; conll:WORD ")"; conll:TOKEN "-RRB-"; conll:LEMMA "-rrb-"; conll:LEMPOS "-rrb--x"; conll:HEAD :s1_0; conll:POS "-RRB-"; nif:nextWord :s1_160 .
:s1_160 a nif:Word; conll:WORD "private"; conll:TOKEN "private"; conll:LEMMA "private"; conll:LEMPOS "private-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_161 .
:s1_161 a nif:Word; conll:WORD "coverage"; conll:TOKEN "coverage"; conll:LEMMA "coverage"; conll:LEMPOS "coverage-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_162 .
:s1_162 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_163 .
:s1_163 a nif:Word; conll:WORD "Today"; conll:TOKEN "Today"; conll:LEMMA "today"; conll:LEMPOS "today-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_164 .
:s1_164 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_165 .
:s1_165 a nif:Word; conll:WORD "an"; conll:TOKEN "an"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_166 .
:s1_166 a nif:Word; conll:WORD "estimated"; conll:TOKEN "estimated"; conll:LEMMA "estimate"; conll:LEMPOS "estimate-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_167 .
:s1_167 a nif:Word; conll:WORD "177"; conll:TOKEN "177"; conll:LEMMA "177"; conll:LEMPOS "177-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_168 .
:s1_168 a nif:Word; conll:WORD "million"; conll:TOKEN "million"; conll:LEMMA "million"; conll:LEMPOS "million-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_169 .
:s1_169 a nif:Word; conll:WORD "Americans"; conll:TOKEN "Americans"; conll:LEMMA "Americans"; conll:LEMPOS "Americans-e"; conll:HEAD :s1_0; conll:POS "NNPS"; nif:nextWord :s1_170 .
:s1_170 a nif:Word; conll:WORD "have"; conll:TOKEN "have"; conll:LEMMA "have"; conll:LEMPOS "have-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_171 .
:s1_171 a nif:Word; conll:WORD "private"; conll:TOKEN "private"; conll:LEMMA "private"; conll:LEMPOS "private-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_172 .
:s1_172 a nif:Word; conll:WORD "coverage"; conll:TOKEN "coverage"; conll:LEMMA "coverage"; conll:LEMPOS "coverage-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_173 .
:s1_173 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_174 .
:s1_174 a nif:Word; conll:WORD "The"; conll:TOKEN "The"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_175 .
:s1_175 a nif:Word; conll:WORD "single-payer"; conll:TOKEN "single-payer"; conll:LEMMA "single-payer"; conll:LEMPOS "single-payer-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_176 .
:s1_176 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_177 .
:s1_177 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_178 .
:s1_178 a nif:Word; conll:WORD "plans"; conll:TOKEN "plans"; conll:LEMMA "plan"; conll:LEMPOS "plan-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_179 .
:s1_179 a nif:Word; conll:WORD "now"; conll:TOKEN "now"; conll:LEMMA "now"; conll:LEMPOS "now-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_180 .
:s1_180 a nif:Word; conll:WORD "being"; conll:TOKEN "being"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_181 .
:s1_181 a nif:Word; conll:WORD "put"; conll:TOKEN "put"; conll:LEMMA "put"; conll:LEMPOS "put-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_182 .
:s1_182 a nif:Word; conll:WORD "forth"; conll:TOKEN "forth"; conll:LEMMA "forth"; conll:LEMPOS "forth-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_183 .
:s1_183 a nif:Word; conll:WORD "by"; conll:TOKEN "by"; conll:LEMMA "by"; conll:LEMPOS "by-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_184 .
:s1_184 a nif:Word; conll:WORD "Democrats"; conll:TOKEN "Democrats"; conll:LEMMA "Democrats"; conll:LEMPOS "Democrats-e"; conll:HEAD :s1_0; conll:POS "NNPS"; nif:nextWord :s1_185 .
:s1_185 a nif:Word; conll:WORD "under"; conll:TOKEN "under"; conll:LEMMA "under"; conll:LEMPOS "under-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_186 .
:s1_186 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_187 .
:s1_187 a nif:Word; conll:WORD "label"; conll:TOKEN "label"; conll:LEMMA "label"; conll:LEMPOS "label-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_188 .
:s1_188 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "``"; conll:LEMMA "``"; conll:LEMPOS "``-x"; conll:HEAD :s1_0; conll:POS "``"; nif:nextWord :s1_189 .
:s1_189 a nif:Word; conll:WORD "Medicare"; conll:TOKEN "Medicare"; conll:LEMMA "Medicare"; conll:LEMPOS "Medicare-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_190 .
:s1_190 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_191 .
:s1_191 a nif:Word; conll:WORD "All"; conll:TOKEN "All"; conll:LEMMA "all"; conll:LEMPOS "all-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_192 .
:s1_192 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_193 .
:s1_193 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "''"; conll:LEMMA "''"; conll:LEMPOS "''-x"; conll:HEAD :s1_0; conll:POS "''"; nif:nextWord :s1_194 .
:s1_194 a nif:Word; conll:WORD "however"; conll:TOKEN "however"; conll:LEMMA "however"; conll:LEMPOS "however-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_195 .
:s1_195 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_196 .
:s1_196 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_197 .
:s1_197 a nif:Word; conll:WORD "eliminate"; conll:TOKEN "eliminate"; conll:LEMMA "eliminate"; conll:LEMPOS "eliminate-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_198 .
:s1_198 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_199 .
:s1_199 a nif:Word; conll:WORD "coverage"; conll:TOKEN "coverage"; conll:LEMMA "coverage"; conll:LEMPOS "coverage-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_200 .
:s1_200 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_201 .
:s1_201 a nif:Word; conll:WORD "As"; conll:TOKEN "As"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_202 .
:s1_202 a nif:Word; conll:WORD "Rep."; conll:TOKEN "Rep."; conll:LEMMA "Rep."; conll:LEMPOS "Rep.-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_203 .
:s1_203 a nif:Word; conll:WORD "Pramila"; conll:TOKEN "Pramila"; conll:LEMMA "Pramila"; conll:LEMPOS "Pramila-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_204 .
:s1_204 a nif:Word; conll:WORD "Jayapal"; conll:TOKEN "Jayapal"; conll:LEMMA "Jayapal"; conll:LEMPOS "Jayapal-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_205 .
:s1_205 a nif:Word; conll:WORD "("; conll:TOKEN "-LRB-"; conll:LEMMA "-lrb-"; conll:LEMPOS "-lrb--x"; conll:HEAD :s1_0; conll:POS "-LRB-"; nif:nextWord :s1_206 .
:s1_206 a nif:Word; conll:WORD "D-Wash"; conll:TOKEN "D-Wash"; conll:LEMMA "D-Wash"; conll:LEMPOS "D-Wash-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_207 .
:s1_207 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_208 .
:s1_208 a nif:Word; conll:WORD ")"; conll:TOKEN "-RRB-"; conll:LEMMA "-rrb-"; conll:LEMPOS "-rrb--x"; conll:HEAD :s1_0; conll:POS "-RRB-"; nif:nextWord :s1_209 .
:s1_209 a nif:Word; conll:WORD "said"; conll:TOKEN "said"; conll:LEMMA "say"; conll:LEMPOS "say-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_210 .
:s1_210 a nif:Word; conll:WORD "this"; conll:TOKEN "this"; conll:LEMMA "this"; conll:LEMPOS "this-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_211 .
:s1_211 a nif:Word; conll:WORD "week"; conll:TOKEN "week"; conll:LEMMA "week"; conll:LEMPOS "week-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_212 .
:s1_212 a nif:Word; conll:WORD "when"; conll:TOKEN "when"; conll:LEMMA "when"; conll:LEMPOS "when-r"; conll:HEAD :s1_0; conll:POS "WRB"; nif:nextWord :s1_213 .
:s1_213 a nif:Word; conll:WORD "announcing"; conll:TOKEN "announcing"; conll:LEMMA "announce"; conll:LEMPOS "announce-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_214 .
:s1_214 a nif:Word; conll:WORD "House"; conll:TOKEN "House"; conll:LEMMA "House"; conll:LEMPOS "House-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_215 .
:s1_215 a nif:Word; conll:WORD "Democrats"; conll:TOKEN "Democrats"; conll:LEMMA "Democrats"; conll:LEMPOS "Democrats-e"; conll:HEAD :s1_0; conll:POS "NNPS"; nif:nextWord :s1_216 .
:s1_216 a nif:Word; conll:WORD "'"; conll:TOKEN "'"; conll:LEMMA "'"; conll:LEMPOS "'-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_217 .
:s1_217 a nif:Word; conll:WORD "new"; conll:TOKEN "new"; conll:LEMMA "new"; conll:LEMPOS "new-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_218 .
:s1_218 a nif:Word; conll:WORD "Medicare"; conll:TOKEN "Medicare"; conll:LEMMA "Medicare"; conll:LEMPOS "Medicare-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_219 .
:s1_219 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_220 .
:s1_220 a nif:Word; conll:WORD "All"; conll:TOKEN "All"; conll:LEMMA "all"; conll:LEMPOS "all-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_221 .
:s1_221 a nif:Word; conll:WORD "bill"; conll:TOKEN "bill"; conll:LEMMA "bill"; conll:LEMPOS "bill-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_222 .
:s1_222 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_223 .
:s1_223 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_224 .
:s1_224 a nif:Word; conll:WORD "plan"; conll:TOKEN "plan"; conll:LEMMA "plan"; conll:LEMPOS "plan-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_225 .
:s1_225 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_226 .
:s1_226 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "``"; conll:LEMMA "``"; conll:LEMPOS "``-x"; conll:HEAD :s1_0; conll:POS "``"; nif:nextWord :s1_227 .
:s1_227 a nif:Word; conll:WORD "mean"; conll:TOKEN "mean"; conll:LEMMA "mean"; conll:LEMPOS "mean-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_228 .
:s1_228 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_229 .
:s1_229 a nif:Word; conll:WORD "system"; conll:TOKEN "system"; conll:LEMMA "system"; conll:LEMPOS "system-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_230 .
:s1_230 a nif:Word; conll:WORD "where"; conll:TOKEN "where"; conll:LEMMA "where"; conll:LEMPOS "where-r"; conll:HEAD :s1_0; conll:POS "WRB"; nif:nextWord :s1_231 .
:s1_231 a nif:Word; conll:WORD "there"; conll:TOKEN "there"; conll:LEMMA "there"; conll:LEMPOS "there-r"; conll:HEAD :s1_0; conll:POS "EX"; nif:nextWord :s1_232 .
:s1_232 a nif:Word; conll:WORD "are"; conll:TOKEN "are"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_233 .
:s1_233 a nif:Word; conll:WORD "no"; conll:TOKEN "no"; conll:LEMMA "no"; conll:LEMPOS "no-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_234 .
:s1_234 a nif:Word; conll:WORD "private"; conll:TOKEN "private"; conll:LEMMA "private"; conll:LEMPOS "private-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_235 .
:s1_235 a nif:Word; conll:WORD "insurance"; conll:TOKEN "insurance"; conll:LEMMA "insurance"; conll:LEMPOS "insurance-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_236 .
:s1_236 a nif:Word; conll:WORD "companies"; conll:TOKEN "companies"; conll:LEMMA "company"; conll:LEMPOS "company-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_237 .
:s1_237 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-d"; conll:HEAD :s1_0; conll:POS "WDT"; nif:nextWord :s1_238 .
:s1_238 a nif:Word; conll:WORD "provide"; conll:TOKEN "provide"; conll:LEMMA "provide"; conll:LEMPOS "provide-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_239 .
:s1_239 a nif:Word; conll:WORD "these"; conll:TOKEN "these"; conll:LEMMA "these"; conll:LEMPOS "these-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_240 .
:s1_240 a nif:Word; conll:WORD "core"; conll:TOKEN "core"; conll:LEMMA "core"; conll:LEMPOS "core-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_241 .
:s1_241 a nif:Word; conll:WORD "comprehensive"; conll:TOKEN "comprehensive"; conll:LEMMA "comprehensive"; conll:LEMPOS "comprehensive-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_242 .
:s1_242 a nif:Word; conll:WORD "benefits"; conll:TOKEN "benefits"; conll:LEMMA "benefit"; conll:LEMPOS "benefit-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_243 .
:s1_243 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-d"; conll:HEAD :s1_0; conll:POS "WDT"; nif:nextWord :s1_244 .
:s1_244 a nif:Word; conll:WORD "will"; conll:TOKEN "will"; conll:LEMMA "will"; conll:LEMPOS "will-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_245 .
:s1_245 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_246 .
:s1_246 a nif:Word; conll:WORD "covered"; conll:TOKEN "covered"; conll:LEMMA "cover"; conll:LEMPOS "cover-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_247 .
:s1_247 a nif:Word; conll:WORD "through"; conll:TOKEN "through"; conll:LEMMA "through"; conll:LEMPOS "through-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_248 .
:s1_248 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_249 .
:s1_249 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_250 .
:s1_250 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_251 .
:s1_251 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "''"; conll:LEMMA "''"; conll:LEMPOS "''-x"; conll:HEAD :s1_0; conll:POS "''"; nif:nextWord :s1_252 .
:s1_252 a nif:Word; conll:WORD "Unlike"; conll:TOKEN "Unlike"; conll:LEMMA "unlike"; conll:LEMPOS "unlike-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_253 .
:s1_253 a nif:Word; conll:WORD "Obamacare"; conll:TOKEN "Obamacare"; conll:LEMMA "obamacare"; conll:LEMPOS "obamacare-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_254 .
:s1_254 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_255 .
:s1_255 a nif:Word; conll:WORD "then"; conll:TOKEN "then"; conll:LEMMA "then"; conll:LEMPOS "then-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_256 .
:s1_256 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_257 .
:s1_257 a nif:Word; conll:WORD "Medicare"; conll:TOKEN "Medicare"; conll:LEMMA "Medicare"; conll:LEMPOS "Medicare-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_258 .
:s1_258 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_259 .
:s1_259 a nif:Word; conll:WORD "All"; conll:TOKEN "All"; conll:LEMMA "all"; conll:LEMPOS "all-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_260 .
:s1_260 a nif:Word; conll:WORD "can"; conll:TOKEN "can"; conll:LEMMA "can"; conll:LEMPOS "can-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_261 .
:s1_261 a nif:Word; conll:WORD "legitimately"; conll:TOKEN "legitimately"; conll:LEMMA "legitimately"; conll:LEMPOS "legitimately-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_262 .
:s1_262 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_263 .
:s1_263 a nif:Word; conll:WORD "described"; conll:TOKEN "described"; conll:LEMMA "describe"; conll:LEMPOS "describe-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_264 .
:s1_264 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_265 .
:s1_265 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_266 .
:s1_266 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_267 .
:s1_267 a nif:Word; conll:WORD "takeover"; conll:TOKEN "takeover"; conll:LEMMA "takeover"; conll:LEMPOS "takeover-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_268 .
:s1_268 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_269 .
:s1_269 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_270 .
:s1_270 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_271 .
:s1_271 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_272 .
:s1_272 a nif:Word; conll:WORD "Although"; conll:TOKEN "Although"; conll:LEMMA "although"; conll:LEMPOS "although-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_273 .
:s1_273 a nif:Word; conll:WORD "Jayapal"; conll:TOKEN "Jayapal"; conll:LEMMA "Jayapal"; conll:LEMPOS "Jayapal-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_274 .
:s1_274 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_275 .
:s1_275 a nif:Word; conll:WORD "plan"; conll:TOKEN "plan"; conll:LEMMA "plan"; conll:LEMPOS "plan-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_276 .
:s1_276 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_277 .
:s1_277 a nif:Word; conll:WORD "allow"; conll:TOKEN "allow"; conll:LEMMA "allow"; conll:LEMPOS "allow-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_278 .
:s1_278 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_279 .
:s1_279 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_280 .
:s1_280 a nif:Word; conll:WORD "creation"; conll:TOKEN "creation"; conll:LEMMA "creation"; conll:LEMPOS "creation-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_281 .
:s1_281 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_282 .
:s1_282 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_283 .
:s1_283 a nif:Word; conll:WORD "secondary"; conll:TOKEN "secondary"; conll:LEMMA "secondary"; conll:LEMPOS "secondary-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_284 .
:s1_284 a nif:Word; conll:WORD "market"; conll:TOKEN "market"; conll:LEMMA "market"; conll:LEMPOS "market-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_285 .
:s1_285 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_286 .
:s1_286 a nif:Word; conll:WORD "supplementary"; conll:TOKEN "supplementary"; conll:LEMMA "supplementary"; conll:LEMPOS "supplementary-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_287 .
:s1_287 a nif:Word; conll:WORD "coverage"; conll:TOKEN "coverage"; conll:LEMMA "coverage"; conll:LEMPOS "coverage-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_288 .
:s1_288 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_289 .
:s1_289 a nif:Word; conll:WORD "addition"; conll:TOKEN "addition"; conll:LEMMA "addition"; conll:LEMPOS "addition-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_290 .
:s1_290 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_291 .
:s1_291 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_292 .
:s1_292 a nif:Word; conll:WORD "government-run"; conll:TOKEN "government-run"; conll:LEMMA "government-run"; conll:LEMPOS "government-run-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_293 .
:s1_293 a nif:Word; conll:WORD "plan"; conll:TOKEN "plan"; conll:LEMMA "plan"; conll:LEMPOS "plan-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_294 .
:s1_294 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_295 .
:s1_295 a nif:Word; conll:WORD "direct"; conll:TOKEN "direct"; conll:LEMMA "direct"; conll:LEMPOS "direct-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_296 .
:s1_296 a nif:Word; conll:WORD "cash"; conll:TOKEN "cash"; conll:LEMMA "cash"; conll:LEMPOS "cash-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_297 .
:s1_297 a nif:Word; conll:WORD "payments"; conll:TOKEN "payments"; conll:LEMMA "payment"; conll:LEMPOS "payment-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_298 .
:s1_298 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_299 .
:s1_299 a nif:Word; conll:WORD "doctors"; conll:TOKEN "doctors"; conll:LEMMA "doctor"; conll:LEMPOS "doctor-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_300 .
:s1_300 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_301 .
:s1_301 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_302 .
:s1_302 a nif:Word; conll:WORD "market"; conll:TOKEN "market"; conll:LEMMA "market"; conll:LEMPOS "market-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_303 .
:s1_303 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_304 .
:s1_304 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_305 .
:s1_305 a nif:Word; conll:WORD "private"; conll:TOKEN "private"; conll:LEMMA "private"; conll:LEMPOS "private-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_306 .
:s1_306 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_307 .
:s1_307 a nif:Word; conll:WORD "coverage"; conll:TOKEN "coverage"; conll:LEMMA "coverage"; conll:LEMPOS "coverage-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_308 .
:s1_308 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-d"; conll:HEAD :s1_0; conll:POS "WDT"; nif:nextWord :s1_309 .
:s1_309 a nif:Word; conll:WORD "tens"; conll:TOKEN "tens"; conll:LEMMA "ten"; conll:LEMPOS "ten-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_310 .
:s1_310 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_311 .
:s1_311 a nif:Word; conll:WORD "millions"; conll:TOKEN "millions"; conll:LEMMA "million"; conll:LEMPOS "million-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_312 .
:s1_312 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_313 .
:s1_313 a nif:Word; conll:WORD "Americans"; conll:TOKEN "Americans"; conll:LEMMA "Americans"; conll:LEMPOS "Americans-e"; conll:HEAD :s1_0; conll:POS "NNPS"; nif:nextWord :s1_314 .
:s1_314 a nif:Word; conll:WORD "currently"; conll:TOKEN "currently"; conll:LEMMA "currently"; conll:LEMPOS "currently-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_315 .
:s1_315 a nif:Word; conll:WORD "have"; conll:TOKEN "have"; conll:LEMMA "have"; conll:LEMPOS "have-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_316 .
:s1_316 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_317 .
:s1_317 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_318 .
:s1_318 a nif:Word; conll:WORD "eliminated"; conll:TOKEN "eliminated"; conll:LEMMA "eliminate"; conll:LEMPOS "eliminate-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_319 .
:s1_319 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_320 .
:s1_320 a nif:Word; conll:WORD "Employers"; conll:TOKEN "Employers"; conll:LEMMA "employer"; conll:LEMPOS "employer-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_321 .
:s1_321 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_322 .
:s1_322 a nif:Word; conll:WORD "insurers"; conll:TOKEN "insurers"; conll:LEMMA "insurer"; conll:LEMPOS "insurer-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_323 .
:s1_323 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_324 .
:s1_324 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_325 .
:s1_325 a nif:Word; conll:WORD "prohibited"; conll:TOKEN "prohibited"; conll:LEMMA "prohibit"; conll:LEMPOS "prohibit-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_326 .
:s1_326 a nif:Word; conll:WORD "by"; conll:TOKEN "by"; conll:LEMMA "by"; conll:LEMPOS "by-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_327 .
:s1_327 a nif:Word; conll:WORD "law"; conll:TOKEN "law"; conll:LEMMA "law"; conll:LEMPOS "law-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_328 .
:s1_328 a nif:Word; conll:WORD "from"; conll:TOKEN "from"; conll:LEMMA "from"; conll:LEMPOS "from-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_329 .
:s1_329 a nif:Word; conll:WORD "providing"; conll:TOKEN "providing"; conll:LEMMA "provide"; conll:LEMPOS "provide-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_330 .
:s1_330 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_331 .
:s1_331 a nif:Word; conll:WORD "same"; conll:TOKEN "same"; conll:LEMMA "same"; conll:LEMPOS "same-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_332 .
:s1_332 a nif:Word; conll:WORD "benefits"; conll:TOKEN "benefits"; conll:LEMMA "benefit"; conll:LEMPOS "benefit-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_333 .
:s1_333 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_334 .
:s1_334 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_335 .
:s1_335 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_336 .
:s1_336 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_337 .
:s1_337 a nif:Word; conll:WORD "plan"; conll:TOKEN "plan"; conll:LEMMA "plan"; conll:LEMPOS "plan-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_338 .
:s1_338 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_339 .
:s1_339 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_340 .
:s1_340 a nif:Word; conll:WORD "prohibition"; conll:TOKEN "prohibition"; conll:LEMMA "prohibition"; conll:LEMPOS "prohibition-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_341 .
:s1_341 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-d"; conll:HEAD :s1_0; conll:POS "WDT"; nif:nextWord :s1_342 .
:s1_342 a nif:Word; conll:WORD "goes"; conll:TOKEN "goes"; conll:LEMMA "go"; conll:LEMPOS "go-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_343 .
:s1_343 a nif:Word; conll:WORD "further"; conll:TOKEN "further"; conll:LEMMA "further"; conll:LEMPOS "further-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_344 .
:s1_344 a nif:Word; conll:WORD "than"; conll:TOKEN "than"; conll:LEMMA "than"; conll:LEMPOS "than-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_345 .
:s1_345 a nif:Word; conll:WORD "some"; conll:TOKEN "some"; conll:LEMMA "some"; conll:LEMPOS "some-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_346 .
:s1_346 a nif:Word; conll:WORD "other"; conll:TOKEN "other"; conll:LEMMA "other"; conll:LEMPOS "other-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_347 .
:s1_347 a nif:Word; conll:WORD "countries"; conll:TOKEN "countries"; conll:LEMMA "country"; conll:LEMPOS "country-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_348 .
:s1_348 a nif:Word; conll:WORD "with"; conll:TOKEN "with"; conll:LEMMA "with"; conll:LEMPOS "with-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_349 .
:s1_349 a nif:Word; conll:WORD "national"; conll:TOKEN "national"; conll:LEMMA "national"; conll:LEMPOS "national-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_350 .
:s1_350 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_351 .
:s1_351 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_352 .
:s1_352 a nif:Word; conll:WORD "systems"; conll:TOKEN "systems"; conll:LEMMA "system"; conll:LEMPOS "system-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_353 .
:s1_353 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_354 .
:s1_354 a nif:Word; conll:WORD "Private"; conll:TOKEN "Private"; conll:LEMMA "private"; conll:LEMPOS "private-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_355 .
:s1_355 a nif:Word; conll:WORD "insurance"; conll:TOKEN "insurance"; conll:LEMMA "insurance"; conll:LEMPOS "insurance-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_356 .
:s1_356 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_357 .
:s1_357 a nif:Word; conll:WORD "we"; conll:TOKEN "we"; conll:LEMMA "we"; conll:LEMPOS "we-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_358 .
:s1_358 a nif:Word; conll:WORD "know"; conll:TOKEN "know"; conll:LEMMA "know"; conll:LEMPOS "know-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_359 .
:s1_359 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_360 .
:s1_360 a nif:Word; conll:WORD "today"; conll:TOKEN "today"; conll:LEMMA "today"; conll:LEMPOS "today-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_361 .
:s1_361 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_362 .
:s1_362 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_363 .
:s1_363 a nif:Word; conll:WORD "illegal"; conll:TOKEN "illegal"; conll:LEMMA "illegal"; conll:LEMPOS "illegal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_364 .
:s1_364 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_365 .
:s1_365 a nif:Word; conll:WORD "And"; conll:TOKEN "And"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_366 .
:s1_366 a nif:Word; conll:WORD "while"; conll:TOKEN "while"; conll:LEMMA "while"; conll:LEMPOS "while-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_367 .
:s1_367 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_368 .
:s1_368 a nif:Word; conll:WORD "federal"; conll:TOKEN "federal"; conll:LEMMA "federal"; conll:LEMPOS "federal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_369 .
:s1_369 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_370 .
:s1_370 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_371 .
:s1_371 a nif:Word; conll:WORD "neither"; conll:TOKEN "neither"; conll:LEMMA "neither"; conll:LEMPOS "neither-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_372 .
:s1_372 a nif:Word; conll:WORD "own"; conll:TOKEN "own"; conll:LEMMA "own"; conll:LEMPOS "own-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_373 .
:s1_373 a nif:Word; conll:WORD "hospitals"; conll:TOKEN "hospitals"; conll:LEMMA "hospital"; conll:LEMPOS "hospital-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_374 .
:s1_374 a nif:Word; conll:WORD "nor"; conll:TOKEN "nor"; conll:LEMMA "nor"; conll:LEMPOS "nor-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_375 .
:s1_375 a nif:Word; conll:WORD "employ"; conll:TOKEN "employ"; conll:LEMMA "employ"; conll:LEMPOS "employ-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_376 .
:s1_376 a nif:Word; conll:WORD "doctors"; conll:TOKEN "doctors"; conll:LEMMA "doctor"; conll:LEMPOS "doctor-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_377 .
:s1_377 a nif:Word; conll:WORD "directly"; conll:TOKEN "directly"; conll:LEMMA "directly"; conll:LEMPOS "directly-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_378 .
:s1_378 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_379 .
:s1_379 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_380 .
:s1_380 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_381 .
:s1_381 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_382 .
:s1_382 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_383 .
:s1_383 a nif:Word; conll:WORD "charge"; conll:TOKEN "charge"; conll:LEMMA "charge"; conll:LEMPOS "charge-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_384 .
:s1_384 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_385 .
:s1_385 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_386 .
:s1_386 a nif:Word; conll:WORD "vast"; conll:TOKEN "vast"; conll:LEMMA "vast"; conll:LEMPOS "vast-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_387 .
:s1_387 a nif:Word; conll:WORD "majority"; conll:TOKEN "majority"; conll:LEMMA "majority"; conll:LEMPOS "majority-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_388 .
:s1_388 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_389 .
:s1_389 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_390 .
:s1_390 a nif:Word; conll:WORD "nation"; conll:TOKEN "nation"; conll:LEMMA "nation"; conll:LEMPOS "nation-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_391 .
:s1_391 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_392 .
:s1_392 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_393 .
:s1_393 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_394 .
:s1_394 a nif:Word; conll:WORD "financing"; conll:TOKEN "financing"; conll:LEMMA "financing"; conll:LEMPOS "financing-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_395 .
:s1_395 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_396 .
:s1_396 a nif:Word; conll:WORD "That"; conll:TOKEN "That"; conll:LEMMA "that"; conll:LEMPOS "that-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_397 .
:s1_397 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_398 .
:s1_398 a nif:Word; conll:WORD "include"; conll:TOKEN "include"; conll:LEMMA "include"; conll:LEMPOS "include-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_399 .
:s1_399 a nif:Word; conll:WORD "setting"; conll:TOKEN "setting"; conll:LEMMA "set"; conll:LEMPOS "set-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_400 .
:s1_400 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_401 .
:s1_401 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "``"; conll:LEMMA "``"; conll:LEMPOS "``-x"; conll:HEAD :s1_0; conll:POS "``"; nif:nextWord :s1_402 .
:s1_402 a nif:Word; conll:WORD "national"; conll:TOKEN "national"; conll:LEMMA "national"; conll:LEMPOS "national-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_403 .
:s1_403 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_404 .
:s1_404 a nif:Word; conll:WORD "budget"; conll:TOKEN "budget"; conll:LEMMA "budget"; conll:LEMPOS "budget-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_405 .
:s1_405 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "''"; conll:LEMMA "''"; conll:LEMPOS "''-x"; conll:HEAD :s1_0; conll:POS "''"; nif:nextWord :s1_406 .
:s1_406 a nif:Word; conll:LEMPOS "---x"; conll:HEAD :s1_0; conll:POS ":"; nif:nextWord :s1_407 .
:s1_407 a nif:Word; conll:WORD "essentially"; conll:TOKEN "essentially"; conll:LEMMA "essentially"; conll:LEMPOS "essentially-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_408 .
:s1_408 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_409 .
:s1_409 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_410 .
:s1_410 a nif:Word; conll:WORD "federally"; conll:TOKEN "federally"; conll:LEMMA "federally"; conll:LEMPOS "federally-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_411 .
:s1_411 a nif:Word; conll:WORD "imposed"; conll:TOKEN "imposed"; conll:LEMMA "impose"; conll:LEMPOS "impose-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_412 .
:s1_412 a nif:Word; conll:WORD "cap"; conll:TOKEN "cap"; conll:LEMMA "cap"; conll:LEMPOS "cap-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_413 .
:s1_413 a nif:Word; conll:WORD "on"; conll:TOKEN "on"; conll:LEMMA "on"; conll:LEMPOS "on-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_414 .
:s1_414 a nif:Word; conll:WORD "total"; conll:TOKEN "total"; conll:LEMMA "total"; conll:LEMPOS "total-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_415 .
:s1_415 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_416 .
:s1_416 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_417 .
:s1_417 a nif:Word; conll:WORD "spending"; conll:TOKEN "spending"; conll:LEMMA "spending"; conll:LEMPOS "spending-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_418 .
:s1_418 a nif:Word; conll:LEMPOS "---x"; conll:HEAD :s1_0; conll:POS ":"; nif:nextWord :s1_419 .
:s1_419 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_420 .
:s1_420 a nif:Word; conll:WORD "divvying"; conll:TOKEN "divvying"; conll:LEMMA "divvy"; conll:LEMPOS "divvy-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_421 .
:s1_421 a nif:Word; conll:WORD "up"; conll:TOKEN "up"; conll:LEMMA "up"; conll:LEMPOS "up-x"; conll:HEAD :s1_0; conll:POS "RP"; nif:nextWord :s1_422 .
:s1_422 a nif:Word; conll:WORD "those"; conll:TOKEN "those"; conll:LEMMA "those"; conll:LEMPOS "those-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_423 .
:s1_423 a nif:Word; conll:WORD "funds"; conll:TOKEN "funds"; conll:LEMMA "fund"; conll:LEMPOS "fund-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_424 .
:s1_424 a nif:Word; conll:WORD "by"; conll:TOKEN "by"; conll:LEMMA "by"; conll:LEMPOS "by-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_425 .
:s1_425 a nif:Word; conll:WORD "region"; conll:TOKEN "region"; conll:LEMMA "region"; conll:LEMPOS "region-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_426 .
:s1_426 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_427 .
:s1_427 a nif:Word; conll:WORD "The"; conll:TOKEN "The"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_428 .
:s1_428 a nif:Word; conll:WORD "federal"; conll:TOKEN "federal"; conll:LEMMA "federal"; conll:LEMPOS "federal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_429 .
:s1_429 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_430 .
:s1_430 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_431 .
:s1_431 a nif:Word; conll:WORD "also"; conll:TOKEN "also"; conll:LEMMA "also"; conll:LEMPOS "also-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_432 .
:s1_432 a nif:Word; conll:WORD "determine"; conll:TOKEN "determine"; conll:LEMMA "determine"; conll:LEMPOS "determine-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_433 .
:s1_433 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_434 .
:s1_434 a nif:Word; conll:WORD "budgets"; conll:TOKEN "budgets"; conll:LEMMA "budget"; conll:LEMPOS "budget-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_435 .
:s1_435 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_436 .
:s1_436 a nif:Word; conll:WORD "capital"; conll:TOKEN "capital"; conll:LEMMA "capital"; conll:LEMPOS "capital-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_437 .
:s1_437 a nif:Word; conll:WORD "improvements"; conll:TOKEN "improvements"; conll:LEMMA "improvement"; conll:LEMPOS "improvement-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_438 .
:s1_438 a nif:Word; conll:WORD "at"; conll:TOKEN "at"; conll:LEMMA "at"; conll:LEMPOS "at-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_439 .
:s1_439 a nif:Word; conll:WORD "medical"; conll:TOKEN "medical"; conll:LEMMA "medical"; conll:LEMPOS "medical-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_440 .
:s1_440 a nif:Word; conll:WORD "facilities"; conll:TOKEN "facilities"; conll:LEMMA "facility"; conll:LEMPOS "facility-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_441 .
:s1_441 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_442 .
:s1_442 a nif:Word; conll:WORD "set"; conll:TOKEN "set"; conll:LEMMA "set"; conll:LEMPOS "set-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_443 .
:s1_443 a nif:Word; conll:WORD "up"; conll:TOKEN "up"; conll:LEMMA "up"; conll:LEMPOS "up-x"; conll:HEAD :s1_0; conll:POS "RP"; nif:nextWord :s1_444 .
:s1_444 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_445 .
:s1_445 a nif:Word; conll:WORD "fee"; conll:TOKEN "fee"; conll:LEMMA "fee"; conll:LEMPOS "fee-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_446 .
:s1_446 a nif:Word; conll:WORD "schedule"; conll:TOKEN "schedule"; conll:LEMMA "schedule"; conll:LEMPOS "schedule-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_447 .
:s1_447 a nif:Word; conll:WORD "imposing"; conll:TOKEN "imposing"; conll:LEMMA "impose"; conll:LEMPOS "impose-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_448 .
:s1_448 a nif:Word; conll:WORD "rates"; conll:TOKEN "rates"; conll:LEMMA "rate"; conll:LEMPOS "rate-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_449 .
:s1_449 a nif:Word; conll:WORD "paid"; conll:TOKEN "paid"; conll:LEMMA "pay"; conll:LEMPOS "pay-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_450 .
:s1_450 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_451 .
:s1_451 a nif:Word; conll:WORD "doctors"; conll:TOKEN "doctors"; conll:LEMMA "doctor"; conll:LEMPOS "doctor-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_452 .
:s1_452 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_453 .
:s1_453 a nif:Word; conll:WORD "private"; conll:TOKEN "private"; conll:LEMMA "private"; conll:LEMPOS "private-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_454 .
:s1_454 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_455 .
:s1_455 a nif:Word; conll:WORD "In"; conll:TOKEN "In"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_456 .
:s1_456 a nif:Word; conll:WORD "addition"; conll:TOKEN "addition"; conll:LEMMA "addition"; conll:LEMPOS "addition-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_457 .
:s1_457 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_458 .
:s1_458 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_459 .
:s1_459 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_460 .
:s1_460 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_461 .
:s1_461 a nif:Word; conll:WORD "also"; conll:TOKEN "also"; conll:LEMMA "also"; conll:LEMPOS "also-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_462 .
:s1_462 a nif:Word; conll:WORD "specify"; conll:TOKEN "specify"; conll:LEMMA "specify"; conll:LEMPOS "specify-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_463 .
:s1_463 a nif:Word; conll:WORD "staffing"; conll:TOKEN "staffing"; conll:LEMMA "staffing"; conll:LEMPOS "staffing-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_464 .
:s1_464 a nif:Word; conll:WORD "levels"; conll:TOKEN "levels"; conll:LEMMA "level"; conll:LEMPOS "level-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_465 .
:s1_465 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_466 .
:s1_466 a nif:Word; conll:WORD "physicians"; conll:TOKEN "physicians"; conll:LEMMA "physician"; conll:LEMPOS "physician-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_467 .
:s1_467 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_468 .
:s1_468 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_469 .
:s1_469 a nif:Word; conll:WORD "determine"; conll:TOKEN "determine"; conll:LEMMA "determine"; conll:LEMPOS "determine-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_470 .
:s1_470 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_471 .
:s1_471 a nif:Word; conll:WORD "preferred"; conll:TOKEN "preferred"; conll:LEMMA "preferred"; conll:LEMPOS "preferred-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_472 .
:s1_472 a nif:Word; conll:WORD "ratio"; conll:TOKEN "ratio"; conll:LEMMA "ratio"; conll:LEMPOS "ratio-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_473 .
:s1_473 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_474 .
:s1_474 a nif:Word; conll:WORD "nurses"; conll:TOKEN "nurses"; conll:LEMMA "nurse"; conll:LEMPOS "nurse-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_475 .
:s1_475 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_476 .
:s1_476 a nif:Word; conll:WORD "patients"; conll:TOKEN "patients"; conll:LEMMA "patient"; conll:LEMPOS "patient-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_477 .
:s1_477 a nif:Word; conll:WORD "at"; conll:TOKEN "at"; conll:LEMMA "at"; conll:LEMPOS "at-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_478 .
:s1_478 a nif:Word; conll:WORD "any"; conll:TOKEN "any"; conll:LEMMA "any"; conll:LEMPOS "any-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_479 .
:s1_479 a nif:Word; conll:WORD "given"; conll:TOKEN "given"; conll:LEMMA "give"; conll:LEMPOS "give-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_480 .
:s1_480 a nif:Word; conll:WORD "facility"; conll:TOKEN "facility"; conll:LEMMA "facility"; conll:LEMPOS "facility-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_481 .
:s1_481 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_482 .
:s1_482 a nif:Word; conll:WORD "It"; conll:TOKEN "It"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_483 .
:s1_483 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_484 .
:s1_484 a nif:Word; conll:WORD "true"; conll:TOKEN "true"; conll:LEMMA "true"; conll:LEMPOS "true-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_485 .
:s1_485 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_486 .
:s1_486 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_487 .
:s1_487 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_488 .
:s1_488 a nif:Word; conll:WORD "already"; conll:TOKEN "already"; conll:LEMMA "already"; conll:LEMPOS "already-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_489 .
:s1_489 a nif:Word; conll:WORD "sets"; conll:TOKEN "sets"; conll:LEMMA "set"; conll:LEMPOS "set-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_490 .
:s1_490 a nif:Word; conll:WORD "rates"; conll:TOKEN "rates"; conll:LEMMA "rate"; conll:LEMPOS "rate-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_491 .
:s1_491 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_492 .
:s1_492 a nif:Word; conll:WORD "Medicare"; conll:TOKEN "Medicare"; conll:LEMMA "Medicare"; conll:LEMPOS "Medicare-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_493 .
:s1_493 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_494 .
:s1_494 a nif:Word; conll:WORD "its"; conll:TOKEN "its"; conll:LEMMA "its"; conll:LEMPOS "its-p"; conll:HEAD :s1_0; conll:POS "PRP$"; nif:nextWord :s1_495 .
:s1_495 a nif:Word; conll:WORD "current"; conll:TOKEN "current"; conll:LEMMA "current"; conll:LEMPOS "current-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_496 .
:s1_496 a nif:Word; conll:WORD "form"; conll:TOKEN "form"; conll:LEMMA "form"; conll:LEMPOS "form-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_497 .
:s1_497 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_498 .
:s1_498 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_499 .
:s1_499 a nif:Word; conll:WORD "those"; conll:TOKEN "those"; conll:LEMMA "those"; conll:LEMPOS "those-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_500 .
:s1_500 a nif:Word; conll:WORD "rates"; conll:TOKEN "rates"; conll:LEMMA "rate"; conll:LEMPOS "rate-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_501 .
:s1_501 a nif:Word; conll:WORD "exert"; conll:TOKEN "exert"; conll:LEMMA "exert"; conll:LEMPOS "exert-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_502 .
:s1_502 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_503 .
:s1_503 a nif:Word; conll:WORD "significant"; conll:TOKEN "significant"; conll:LEMMA "significant"; conll:LEMPOS "significant-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_504 .
:s1_504 a nif:Word; conll:WORD "influence"; conll:TOKEN "influence"; conll:LEMMA "influence"; conll:LEMPOS "influence-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_505 .
:s1_505 a nif:Word; conll:WORD "on"; conll:TOKEN "on"; conll:LEMMA "on"; conll:LEMPOS "on-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_506 .
:s1_506 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_507 .
:s1_507 a nif:Word; conll:WORD "administration"; conll:TOKEN "administration"; conll:LEMMA "administration"; conll:LEMPOS "administration-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_508 .
:s1_508 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_509 .
:s1_509 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_510 .
:s1_510 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_511 .
:s1_511 a nif:Word; conll:WORD "throughout"; conll:TOKEN "throughout"; conll:LEMMA "throughout"; conll:LEMPOS "throughout-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_512 .
:s1_512 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_513 .
:s1_513 a nif:Word; conll:WORD "country"; conll:TOKEN "country"; conll:LEMMA "country"; conll:LEMPOS "country-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_514 .
:s1_514 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_515 .
:s1_515 a nif:Word; conll:WORD "But"; conll:TOKEN "But"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_516 .
:s1_516 a nif:Word; conll:WORD "today"; conll:TOKEN "today"; conll:LEMMA "today"; conll:LEMPOS "today-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_517 .
:s1_517 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_518 .
:s1_518 a nif:Word; conll:WORD "Medicare"; conll:TOKEN "Medicare"; conll:LEMMA "Medicare"; conll:LEMPOS "Medicare-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_519 .
:s1_519 a nif:Word; conll:WORD "exists"; conll:TOKEN "exists"; conll:LEMMA "exist"; conll:LEMPOS "exist-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_520 .
:s1_520 a nif:Word; conll:WORD "alongside"; conll:TOKEN "alongside"; conll:LEMMA "alongside"; conll:LEMPOS "alongside-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_521 .
:s1_521 a nif:Word; conll:WORD "multiple"; conll:TOKEN "multiple"; conll:LEMMA "multiple"; conll:LEMPOS "multiple-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_522 .
:s1_522 a nif:Word; conll:WORD "private"; conll:TOKEN "private"; conll:LEMMA "private"; conll:LEMPOS "private-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_523 .
:s1_523 a nif:Word; conll:WORD "payers"; conll:TOKEN "payers"; conll:LEMMA "payer"; conll:LEMPOS "payer-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_524 .
:s1_524 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-d"; conll:HEAD :s1_0; conll:POS "WDT"; nif:nextWord :s1_525 .
:s1_525 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_526 .
:s1_526 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_527 .
:s1_527 a nif:Word; conll:WORD "eliminated"; conll:TOKEN "eliminated"; conll:LEMMA "eliminate"; conll:LEMPOS "eliminate-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_528 .
:s1_528 a nif:Word; conll:WORD "under"; conll:TOKEN "under"; conll:LEMMA "under"; conll:LEMPOS "under-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_529 .
:s1_529 a nif:Word; conll:WORD "single-payer"; conll:TOKEN "single-payer"; conll:LEMMA "single-payer"; conll:LEMPOS "single-payer-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_530 .
:s1_530 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_531 .
:s1_531 a nif:Word; conll:WORD "leaving"; conll:TOKEN "leaving"; conll:LEMMA "leave"; conll:LEMPOS "leave-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_532 .
:s1_532 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_533 .
:s1_533 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_534 .
:s1_534 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_535 .
:s1_535 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_536 .
:s1_536 a nif:Word; conll:WORD "sole"; conll:TOKEN "sole"; conll:LEMMA "sole"; conll:LEMPOS "sole-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_537 .
:s1_537 a nif:Word; conll:WORD "payer"; conll:TOKEN "payer"; conll:LEMMA "payer"; conll:LEMPOS "payer-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_538 .
:s1_538 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_539 .
:s1_539 a nif:Word; conll:WORD "most"; conll:TOKEN "most"; conll:LEMMA "most"; conll:LEMPOS "most-j"; conll:HEAD :s1_0; conll:POS "JJS"; nif:nextWord :s1_540 .
:s1_540 a nif:Word; conll:WORD "services"; conll:TOKEN "services"; conll:LEMMA "service"; conll:LEMPOS "service-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_541 .
:s1_541 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_542 .
:s1_542 a nif:Word; conll:WORD "So"; conll:TOKEN "So"; conll:LEMMA "so"; conll:LEMPOS "so-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_543 .
:s1_543 a nif:Word; conll:WORD "while"; conll:TOKEN "while"; conll:LEMMA "while"; conll:LEMPOS "while-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_544 .
:s1_544 a nif:Word; conll:WORD "doctors"; conll:TOKEN "doctors"; conll:LEMMA "doctor"; conll:LEMPOS "doctor-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_545 .
:s1_545 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_546 .
:s1_546 a nif:Word; conll:WORD "hospitals"; conll:TOKEN "hospitals"; conll:LEMMA "hospital"; conll:LEMPOS "hospital-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_547 .
:s1_547 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_548 .
:s1_548 a nif:Word; conll:WORD "not"; conll:TOKEN "not"; conll:LEMMA "not"; conll:LEMPOS "not-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_549 .
:s1_549 a nif:Word; conll:WORD "technically"; conll:TOKEN "technically"; conll:LEMMA "technically"; conll:LEMPOS "technically-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_550 .
:s1_550 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_551 .
:s1_551 a nif:Word; conll:WORD "state"; conll:TOKEN "state"; conll:LEMMA "state"; conll:LEMPOS "state-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_552 .
:s1_552 a nif:Word; conll:WORD "owned"; conll:TOKEN "owned"; conll:LEMMA "own"; conll:LEMPOS "own-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_553 .
:s1_553 a nif:Word; conll:WORD "under"; conll:TOKEN "under"; conll:LEMMA "under"; conll:LEMPOS "under-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_554 .
:s1_554 a nif:Word; conll:WORD "Medicare"; conll:TOKEN "Medicare"; conll:LEMMA "Medicare"; conll:LEMPOS "Medicare-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_555 .
:s1_555 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_556 .
:s1_556 a nif:Word; conll:WORD "All"; conll:TOKEN "All"; conll:LEMMA "all"; conll:LEMPOS "all-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_557 .
:s1_557 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_558 .
:s1_558 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_559 .
:s1_559 a nif:Word; conll:WORD "federal"; conll:TOKEN "federal"; conll:LEMMA "federal"; conll:LEMPOS "federal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_560 .
:s1_560 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_561 .
:s1_561 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_562 .
:s1_562 a nif:Word; conll:WORD "determine"; conll:TOKEN "determine"; conll:LEMMA "determine"; conll:LEMPOS "determine-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_563 .
:s1_563 a nif:Word; conll:WORD "how"; conll:TOKEN "how"; conll:LEMMA "how"; conll:LEMPOS "how-r"; conll:HEAD :s1_0; conll:POS "WRB"; nif:nextWord :s1_564 .
:s1_564 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_565 .
:s1_565 a nif:Word; conll:WORD "vast"; conll:TOKEN "vast"; conll:LEMMA "vast"; conll:LEMPOS "vast-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_566 .
:s1_566 a nif:Word; conll:WORD "majority"; conll:TOKEN "majority"; conll:LEMMA "majority"; conll:LEMPOS "majority-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_567 .
:s1_567 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_568 .
:s1_568 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_569 .
:s1_569 a nif:Word; conll:WORD "nation"; conll:TOKEN "nation"; conll:LEMMA "nation"; conll:LEMPOS "nation-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_570 .
:s1_570 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_571 .
:s1_571 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_572 .
:s1_572 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_573 .
:s1_573 a nif:Word; conll:WORD "dollars"; conll:TOKEN "dollars"; conll:LEMMA "dollar"; conll:LEMPOS "dollar-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_574 .
:s1_574 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_575 .
:s1_575 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_576 .
:s1_576 a nif:Word; conll:WORD "spent"; conll:TOKEN "spent"; conll:LEMMA "spend"; conll:LEMPOS "spend-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_577 .
:s1_577 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_578 .
:s1_578 a nif:Word; conll:WORD "making"; conll:TOKEN "making"; conll:LEMMA "make"; conll:LEMPOS "make-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_579 .
:s1_579 a nif:Word; conll:WORD "providers"; conll:TOKEN "providers"; conll:LEMMA "provider"; conll:LEMPOS "provider-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_580 .
:s1_580 a nif:Word; conll:WORD "even"; conll:TOKEN "even"; conll:LEMMA "even"; conll:LEMPOS "even-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_581 .
:s1_581 a nif:Word; conll:WORD "more"; conll:TOKEN "more"; conll:LEMMA "more"; conll:LEMPOS "more-r"; conll:HEAD :s1_0; conll:POS "RBR"; nif:nextWord :s1_582 .
:s1_582 a nif:Word; conll:WORD "reliant"; conll:TOKEN "reliant"; conll:LEMMA "reliant"; conll:LEMPOS "reliant-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_583 .
:s1_583 a nif:Word; conll:WORD "on"; conll:TOKEN "on"; conll:LEMMA "on"; conll:LEMPOS "on-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_584 .
:s1_584 a nif:Word; conll:WORD "federal"; conll:TOKEN "federal"; conll:LEMMA "federal"; conll:LEMPOS "federal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_585 .
:s1_585 a nif:Word; conll:WORD "funds"; conll:TOKEN "funds"; conll:LEMMA "fund"; conll:LEMPOS "fund-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_586 .
:s1_586 a nif:Word; conll:LEMPOS "---x"; conll:HEAD :s1_0; conll:POS ":"; nif:nextWord :s1_587 .
:s1_587 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_588 .
:s1_588 a nif:Word; conll:WORD "more"; conll:TOKEN "more"; conll:LEMMA "more"; conll:LEMPOS "more-r"; conll:HEAD :s1_0; conll:POS "RBR"; nif:nextWord :s1_589 .
:s1_589 a nif:Word; conll:WORD "susceptible"; conll:TOKEN "susceptible"; conll:LEMMA "susceptible"; conll:LEMPOS "susceptible-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_590 .
:s1_590 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_591 .
:s1_591 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_592 .
:s1_592 a nif:Word; conll:WORD "influence"; conll:TOKEN "influence"; conll:LEMMA "influence"; conll:LEMPOS "influence-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_593 .
:s1_593 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_594 .
:s1_594 a nif:Word; conll:WORD "incentives"; conll:TOKEN "incentives"; conll:LEMMA "incentive"; conll:LEMPOS "incentive-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_595 .
:s1_595 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_596 .
:s1_596 a nif:Word; conll:WORD "federal"; conll:TOKEN "federal"; conll:LEMMA "federal"; conll:LEMPOS "federal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_597 .
:s1_597 a nif:Word; conll:WORD "payment"; conll:TOKEN "payment"; conll:LEMMA "payment"; conll:LEMPOS "payment-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_598 .
:s1_598 a nif:Word; conll:WORD "schemes"; conll:TOKEN "schemes"; conll:LEMMA "scheme"; conll:LEMPOS "scheme-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_599 .
:s1_599 a nif:Word; conll:LEMPOS "---x"; conll:HEAD :s1_0; conll:POS ":"; nif:nextWord :s1_600 .
:s1_600 a nif:Word; conll:WORD "than"; conll:TOKEN "than"; conll:LEMMA "than"; conll:LEMPOS "than-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_601 .
:s1_601 a nif:Word; conll:WORD "they"; conll:TOKEN "they"; conll:LEMMA "they"; conll:LEMPOS "they-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_602 .
:s1_602 a nif:Word; conll:WORD "are"; conll:TOKEN "are"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_603 .
:s1_603 a nif:Word; conll:WORD "today"; conll:TOKEN "today"; conll:LEMMA "today"; conll:LEMPOS "today-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_604 .
:s1_604 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_605 .
:s1_605 a nif:Word; conll:WORD "Some"; conll:TOKEN "Some"; conll:LEMMA "some"; conll:LEMPOS "some-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_606 .
:s1_606 a nif:Word; conll:WORD "practitioners"; conll:TOKEN "practitioners"; conll:LEMMA "practitioner"; conll:LEMPOS "practitioner-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_607 .
:s1_607 a nif:Word; conll:WORD "might"; conll:TOKEN "might"; conll:LEMMA "might"; conll:LEMPOS "might-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_608 .
:s1_608 a nif:Word; conll:WORD "avoid"; conll:TOKEN "avoid"; conll:LEMMA "avoid"; conll:LEMPOS "avoid-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_609 .
:s1_609 a nif:Word; conll:WORD "this"; conll:TOKEN "this"; conll:LEMMA "this"; conll:LEMPOS "this-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_610 .
:s1_610 a nif:Word; conll:WORD "by"; conll:TOKEN "by"; conll:LEMMA "by"; conll:LEMPOS "by-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_611 .
:s1_611 a nif:Word; conll:WORD "accepting"; conll:TOKEN "accepting"; conll:LEMMA "accept"; conll:LEMPOS "accept-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_612 .
:s1_612 a nif:Word; conll:WORD "only"; conll:TOKEN "only"; conll:LEMMA "only"; conll:LEMPOS "only-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_613 .
:s1_613 a nif:Word; conll:WORD "cash"; conll:TOKEN "cash"; conll:LEMMA "cash"; conll:LEMPOS "cash-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_614 .
:s1_614 a nif:Word; conll:WORD "payments"; conll:TOKEN "payments"; conll:LEMMA "payment"; conll:LEMPOS "payment-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_615 .
:s1_615 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_616 .
:s1_616 a nif:Word; conll:WORD "but"; conll:TOKEN "but"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_617 .
:s1_617 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_618 .
:s1_618 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_619 .
:s1_619 a nif:Word; conll:WORD "reasonable"; conll:TOKEN "reasonable"; conll:LEMMA "reasonable"; conll:LEMPOS "reasonable-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_620 .
:s1_620 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_621 .
:s1_621 a nif:Word; conll:WORD "assume"; conll:TOKEN "assume"; conll:LEMMA "assume"; conll:LEMPOS "assume-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_622 .
:s1_622 a nif:Word; conll:WORD "most"; conll:TOKEN "most"; conll:LEMMA "most"; conll:LEMPOS "most-r"; conll:HEAD :s1_0; conll:POS "RBS"; nif:nextWord :s1_623 .
:s1_623 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_624 .
:s1_624 a nif:Word; conll:WORD "not"; conll:TOKEN "not"; conll:LEMMA "not"; conll:LEMPOS "not-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_625 .
:s1_625 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_626 .
:s1_626 a nif:Word; conll:WORD "As"; conll:TOKEN "As"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_627 .
:s1_627 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_628 .
:s1_628 a nif:Word; conll:WORD "consequence"; conll:TOKEN "consequence"; conll:LEMMA "consequence"; conll:LEMPOS "consequence-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_629 .
:s1_629 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_630 .
:s1_630 a nif:Word; conll:WORD "doctors"; conll:TOKEN "doctors"; conll:LEMMA "doctor"; conll:LEMPOS "doctor-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_631 .
:s1_631 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_632 .
:s1_632 a nif:Word; conll:WORD "others"; conll:TOKEN "others"; conll:LEMMA "other"; conll:LEMPOS "other-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_633 .
:s1_633 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_634 .
:s1_634 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_635 .
:s1_635 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_636 .
:s1_636 a nif:Word; conll:WORD "industry"; conll:TOKEN "industry"; conll:LEMMA "industry"; conll:LEMPOS "industry-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_637 .
:s1_637 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_638 .
:s1_638 a nif:Word; conll:WORD "become"; conll:TOKEN "become"; conll:LEMMA "become"; conll:LEMPOS "become-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_639 .
:s1_639 a nif:Word; conll:WORD "de"; conll:TOKEN "de"; conll:LEMMA "de"; conll:LEMPOS "de-x"; conll:HEAD :s1_0; conll:POS "FW"; nif:nextWord :s1_640 .
:s1_640 a nif:Word; conll:WORD "facto"; conll:TOKEN "facto"; conll:LEMMA "facto"; conll:LEMPOS "facto-x"; conll:HEAD :s1_0; conll:POS "FW"; nif:nextWord :s1_641 .
:s1_641 a nif:Word; conll:WORD "federal"; conll:TOKEN "federal"; conll:LEMMA "federal"; conll:LEMPOS "federal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_642 .
:s1_642 a nif:Word; conll:WORD "employees"; conll:TOKEN "employees"; conll:LEMMA "employee"; conll:LEMPOS "employee-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_643 .
:s1_643 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_644 .
:s1_644 a nif:Word; conll:WORD "with"; conll:TOKEN "with"; conll:LEMMA "with"; conll:LEMPOS "with-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_645 .
:s1_645 a nif:Word; conll:WORD "significant"; conll:TOKEN "significant"; conll:LEMMA "significant"; conll:LEMPOS "significant-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_646 .
:s1_646 a nif:Word; conll:WORD "staffing"; conll:TOKEN "staffing"; conll:LEMMA "staffing"; conll:LEMPOS "staffing-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_647 .
:s1_647 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_648 .
:s1_648 a nif:Word; conll:WORD "payment"; conll:TOKEN "payment"; conll:LEMMA "payment"; conll:LEMPOS "payment-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_649 .
:s1_649 a nif:Word; conll:WORD "decisions"; conll:TOKEN "decisions"; conll:LEMMA "decision"; conll:LEMPOS "decision-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_650 .
:s1_650 a nif:Word; conll:WORD "made"; conll:TOKEN "made"; conll:LEMMA "make"; conll:LEMPOS "make-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_651 .
:s1_651 a nif:Word; conll:WORD "by"; conll:TOKEN "by"; conll:LEMMA "by"; conll:LEMPOS "by-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_652 .
:s1_652 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_653 .
:s1_653 a nif:Word; conll:WORD "federal"; conll:TOKEN "federal"; conll:LEMMA "federal"; conll:LEMPOS "federal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_654 .
:s1_654 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_655 .
:s1_655 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_656 .
:s1_656 a nif:Word; conll:WORD "according"; conll:TOKEN "according"; conll:LEMMA "accord"; conll:LEMPOS "accord-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_657 .
:s1_657 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_658 .
:s1_658 a nif:Word; conll:WORD "formulas"; conll:TOKEN "formulas"; conll:LEMMA "formula"; conll:LEMPOS "formula-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_659 .
:s1_659 a nif:Word; conll:WORD "set"; conll:TOKEN "set"; conll:LEMMA "set"; conll:LEMPOS "set-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_660 .
:s1_660 a nif:Word; conll:WORD "by"; conll:TOKEN "by"; conll:LEMMA "by"; conll:LEMPOS "by-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_661 .
:s1_661 a nif:Word; conll:WORD "federal"; conll:TOKEN "federal"; conll:LEMMA "federal"; conll:LEMPOS "federal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_662 .
:s1_662 a nif:Word; conll:WORD "agencies"; conll:TOKEN "agencies"; conll:LEMMA "agency"; conll:LEMPOS "agency-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_663 .
:s1_663 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_664 .
:s1_664 a nif:Word; conll:WORD "Medicare"; conll:TOKEN "Medicare"; conll:LEMMA "Medicare"; conll:LEMPOS "Medicare-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_665 .
:s1_665 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_666 .
:s1_666 a nif:Word; conll:WORD "All"; conll:TOKEN "All"; conll:LEMMA "all"; conll:LEMPOS "all-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_667 .
:s1_667 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_668 .
:s1_668 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_669 .
:s1_669 a nif:Word; conll:WORD "envisioned"; conll:TOKEN "envisioned"; conll:LEMMA "envision"; conll:LEMPOS "envision-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_670 .
:s1_670 a nif:Word; conll:WORD "by"; conll:TOKEN "by"; conll:LEMMA "by"; conll:LEMPOS "by-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_671 .
:s1_671 a nif:Word; conll:WORD "single-payer"; conll:TOKEN "single-payer"; conll:LEMMA "single-payer"; conll:LEMPOS "single-payer-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_672 .
:s1_672 a nif:Word; conll:WORD "proponents"; conll:TOKEN "proponents"; conll:LEMMA "proponent"; conll:LEMPOS "proponent-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_673 .
:s1_673 a nif:Word; conll:WORD "like"; conll:TOKEN "like"; conll:LEMMA "like"; conll:LEMPOS "like-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_674 .
:s1_674 a nif:Word; conll:WORD "Jayapal"; conll:TOKEN "Jayapal"; conll:LEMMA "Jayapal"; conll:LEMPOS "Jayapal-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_675 .
:s1_675 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_676 .
:s1_676 a nif:Word; conll:WORD "Sen."; conll:TOKEN "Sen."; conll:LEMMA "Sen."; conll:LEMPOS "Sen.-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_677 .
:s1_677 a nif:Word; conll:WORD "Bernie"; conll:TOKEN "Bernie"; conll:LEMMA "Bernie"; conll:LEMPOS "Bernie-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_678 .
:s1_678 a nif:Word; conll:WORD "Sanders"; conll:TOKEN "Sanders"; conll:LEMMA "Sanders"; conll:LEMPOS "Sanders-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_679 .
:s1_679 a nif:Word; conll:WORD "("; conll:TOKEN "-LRB-"; conll:LEMMA "-lrb-"; conll:LEMPOS "-lrb--x"; conll:HEAD :s1_0; conll:POS "-LRB-"; nif:nextWord :s1_680 .
:s1_680 a nif:Word; conll:WORD "I-Vt"; conll:TOKEN "I-Vt"; conll:LEMMA "I-Vt"; conll:LEMPOS "I-Vt-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_681 .
:s1_681 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_682 .
:s1_682 a nif:Word; conll:WORD ")"; conll:TOKEN "-RRB-"; conll:LEMMA "-rrb-"; conll:LEMPOS "-rrb--x"; conll:HEAD :s1_0; conll:POS "-RRB-"; nif:nextWord :s1_683 .
:s1_683 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_684 .
:s1_684 a nif:Word; conll:WORD "would"; conll:TOKEN "would"; conll:LEMMA "would"; conll:LEMPOS "would-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_685 .
:s1_685 a nif:Word; conll:WORD "thus"; conll:TOKEN "thus"; conll:LEMMA "thus"; conll:LEMPOS "thus-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_686 .
:s1_686 a nif:Word; conll:WORD "bring"; conll:TOKEN "bring"; conll:LEMMA "bring"; conll:LEMPOS "bring-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_687 .
:s1_687 a nif:Word; conll:WORD "about"; conll:TOKEN "about"; conll:LEMMA "about"; conll:LEMPOS "about-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_688 .
:s1_688 a nif:Word; conll:WORD "an"; conll:TOKEN "an"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_689 .
:s1_689 a nif:Word; conll:WORD "explicit"; conll:TOKEN "explicit"; conll:LEMMA "explicit"; conll:LEMPOS "explicit-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_690 .
:s1_690 a nif:Word; conll:WORD "nationalization"; conll:TOKEN "nationalization"; conll:LEMMA "nationalization"; conll:LEMPOS "nationalization-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_691 .
:s1_691 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_692 .
:s1_692 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_693 .
:s1_693 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_694 .
:s1_694 a nif:Word; conll:WORD "financing"; conll:TOKEN "financing"; conll:LEMMA "financing"; conll:LEMPOS "financing-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_695 .
:s1_695 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_696 .
:s1_696 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_697 .
:s1_697 a nif:Word; conll:WORD "tacit"; conll:TOKEN "tacit"; conll:LEMMA "tacit"; conll:LEMPOS "tacit-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_698 .
:s1_698 a nif:Word; conll:WORD "nationalization"; conll:TOKEN "nationalization"; conll:LEMMA "nationalization"; conll:LEMPOS "nationalization-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_699 .
:s1_699 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_700 .
:s1_700 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_701 .
:s1_701 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_702 .
:s1_702 a nif:Word; conll:WORD "delivery"; conll:TOKEN "delivery"; conll:LEMMA "delivery"; conll:LEMPOS "delivery-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_703 .
:s1_703 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_704 .
:s1_704 a nif:Word; conll:WORD "This"; conll:TOKEN "This"; conll:LEMMA "this"; conll:LEMPOS "this-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_705 .
:s1_705 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_706 .
:s1_706 a nif:Word; conll:WORD "not"; conll:TOKEN "not"; conll:LEMMA "not"; conll:LEMPOS "not-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_707 .
:s1_707 a nif:Word; conll:WORD "an"; conll:TOKEN "an"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_708 .
:s1_708 a nif:Word; conll:WORD "incidental"; conll:TOKEN "incidental"; conll:LEMMA "incidental"; conll:LEMPOS "incidental-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_709 .
:s1_709 a nif:Word; conll:WORD "byproduct"; conll:TOKEN "byproduct"; conll:LEMMA "byproduct"; conll:LEMPOS "byproduct-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_710 .
:s1_710 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_711 .
:s1_711 a nif:Word; conll:WORD "single-payer"; conll:TOKEN "single-payer"; conll:LEMMA "single-payer"; conll:LEMPOS "single-payer-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_712 .
:s1_712 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_713 .
:s1_713 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_714 .
:s1_714 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_715 .
:s1_715 a nif:Word; conll:WORD "but"; conll:TOKEN "but"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_716 .
:s1_716 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_717 .
:s1_717 a nif:Word; conll:WORD "defining"; conll:TOKEN "defining"; conll:LEMMA "define"; conll:LEMPOS "define-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_718 .
:s1_718 a nif:Word; conll:WORD "feature"; conll:TOKEN "feature"; conll:LEMMA "feature"; conll:LEMPOS "feature-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_719 .
:s1_719 a nif:Word; conll:WORD ":"; conll:TOKEN ":"; conll:LEMMA ":"; conll:LEMPOS ":-x"; conll:HEAD :s1_0; conll:POS ":"; nif:nextWord :s1_720 .
:s1_720 a nif:Word; conll:WORD "Medicare"; conll:TOKEN "Medicare"; conll:LEMMA "Medicare"; conll:LEMPOS "Medicare-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_721 .
:s1_721 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_722 .
:s1_722 a nif:Word; conll:WORD "All"; conll:TOKEN "All"; conll:LEMMA "all"; conll:LEMPOS "all-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_723 .
:s1_723 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_724 .
:s1_724 a nif:Word; conll:WORD "designed"; conll:TOKEN "designed"; conll:LEMMA "design"; conll:LEMPOS "design-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_725 .
:s1_725 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_726 .
:s1_726 a nif:Word; conll:WORD "give"; conll:TOKEN "give"; conll:LEMMA "give"; conll:LEMPOS "give-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_727 .
:s1_727 a nif:Word; conll:WORD "politicians"; conll:TOKEN "politicians"; conll:LEMMA "politician"; conll:LEMPOS "politician-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_728 .
:s1_728 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_729 .
:s1_729 a nif:Word; conll:WORD "federal"; conll:TOKEN "federal"; conll:LEMMA "federal"; conll:LEMPOS "federal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_730 .
:s1_730 a nif:Word; conll:WORD "bureaucrats"; conll:TOKEN "bureaucrats"; conll:LEMMA "bureaucrat"; conll:LEMPOS "bureaucrat-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_731 .
:s1_731 a nif:Word; conll:WORD "dramatically"; conll:TOKEN "dramatically"; conll:LEMMA "dramatically"; conll:LEMPOS "dramatically-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_732 .
:s1_732 a nif:Word; conll:WORD "increased"; conll:TOKEN "increased"; conll:LEMMA "increase"; conll:LEMPOS "increase-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_733 .
:s1_733 a nif:Word; conll:WORD "control"; conll:TOKEN "control"; conll:LEMMA "control"; conll:LEMPOS "control-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_734 .
:s1_734 a nif:Word; conll:WORD "over"; conll:TOKEN "over"; conll:LEMMA "over"; conll:LEMPOS "over-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_735 .
:s1_735 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_736 .
:s1_736 a nif:Word; conll:WORD "nation"; conll:TOKEN "nation"; conll:LEMMA "nation"; conll:LEMPOS "nation-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_737 .
:s1_737 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_738 .
:s1_738 a nif:Word; conll:WORD "health"; conll:TOKEN "health"; conll:LEMMA "health"; conll:LEMPOS "health-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_739 .
:s1_739 a nif:Word; conll:WORD "care"; conll:TOKEN "care"; conll:LEMMA "care"; conll:LEMPOS "care-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_740 .
:s1_740 a nif:Word; conll:WORD "system"; conll:TOKEN "system"; conll:LEMMA "system"; conll:LEMPOS "system-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_741 .
:s1_741 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_742 .
:s1_742 a nif:Word; conll:WORD "Republicans"; conll:TOKEN "Republicans"; conll:LEMMA "Republicans"; conll:LEMPOS "Republicans-e"; conll:HEAD :s1_0; conll:POS "NNPS"; nif:nextWord :s1_743 .
:s1_743 a nif:Word; conll:WORD "were"; conll:TOKEN "were"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_744 .
:s1_744 a nif:Word; conll:WORD "mistaken"; conll:TOKEN "mistaken"; conll:LEMMA "mistaken"; conll:LEMPOS "mistaken-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_745 .
:s1_745 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_746 .
:s1_746 a nif:Word; conll:WORD "dub"; conll:TOKEN "dub"; conll:LEMMA "dub"; conll:LEMPOS "dub-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_747 .
:s1_747 a nif:Word; conll:WORD "Obamacare"; conll:TOKEN "Obamacare"; conll:LEMMA "Obamacare"; conll:LEMPOS "Obamacare-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_748 .
:s1_748 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_749 .
:s1_749 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_750 .
:s1_750 a nif:Word; conll:WORD "takeover"; conll:TOKEN "takeover"; conll:LEMMA "takeover"; conll:LEMPOS "takeover-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_751 .
:s1_751 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_752 .
:s1_752 a nif:Word; conll:WORD "but"; conll:TOKEN "but"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_753 .
:s1_753 a nif:Word; conll:WORD "when"; conll:TOKEN "when"; conll:LEMMA "when"; conll:LEMPOS "when-r"; conll:HEAD :s1_0; conll:POS "WRB"; nif:nextWord :s1_754 .
:s1_754 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_755 .
:s1_755 a nif:Word; conll:WORD "comes"; conll:TOKEN "comes"; conll:LEMMA "come"; conll:LEMPOS "come-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_756 .
:s1_756 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_757 .
:s1_757 a nif:Word; conll:WORD "single-payer"; conll:TOKEN "single-payer"; conll:LEMMA "single-payer"; conll:LEMPOS "single-payer-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_758 .
:s1_758 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_759 .
:s1_759 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_760 .
:s1_760 a nif:Word; conll:WORD "description"; conll:TOKEN "description"; conll:LEMMA "description"; conll:LEMPOS "description-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_761 .
:s1_761 a nif:Word; conll:WORD "applies"; conll:TOKEN "applies"; conll:LEMMA "apply"; conll:LEMPOS "apply-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_762 .
:s1_762 a nif:Word; conll:WORD ":"; conll:TOKEN ":"; conll:LEMMA ":"; conll:LEMPOS ":-x"; conll:HEAD :s1_0; conll:POS ":"; nif:nextWord :s1_763 .
:s1_763 a nif:Word; conll:WORD "Putting"; conll:TOKEN "Putting"; conll:LEMMA "put"; conll:LEMPOS "put-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_764 .
:s1_764 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_765 .
:s1_765 a nif:Word; conll:WORD "federal"; conll:TOKEN "federal"; conll:LEMMA "federal"; conll:LEMPOS "federal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_766 .
:s1_766 a nif:Word; conll:WORD "government"; conll:TOKEN "government"; conll:LEMMA "government"; conll:LEMPOS "government-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_767 .
:s1_767 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_768 .
:s1_768 a nif:Word; conll:WORD "charge"; conll:TOKEN "charge"; conll:LEMMA "charge"; conll:LEMPOS "charge-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_769 .
:s1_769 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_770 .
:s1_770 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_771 .
:s1_771 a nif:Word; conll:WORD "heart"; conll:TOKEN "heart"; conll:LEMMA "heart"; conll:LEMPOS "heart-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_772 .
:s1_772 a nif:Word; conll:WORD "of"; conll:TOKEN "of"; conll:LEMMA "of"; conll:LEMPOS "of-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_773 .
:s1_773 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_774 .
:s1_774 a nif:Word; conll:WORD "plan"; conll:TOKEN "plan"; conll:LEMMA "plan"; conll:LEMPOS "plan-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_775 .
:s1_775 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "." .

