java -Dfile.encoding=UTF8 -classpath /mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/bin:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/collection-0.7.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/commons-cli-1.4.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/commons-codec-1.11.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/commons-io-2.6.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/commons-lang3-3.4.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/httpclient-4.5.3.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/httpclient-cache-4.5.3.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/httpcore-4.4.6.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jackson-annotations-2.9.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jackson-core-2.9.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jackson-databind-2.9.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jcl-over-slf4j-1.7.25.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-arq-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-base-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-core-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-dboe-base-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-dboe-index-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-dboe-trans-data-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-dboe-transaction-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-iri-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-shaded-guava-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-tdb-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-tdb2-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jsonld-java-0.11.1.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/libthrift-0.10.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/log4j-1.2.17.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/slf4j-api-1.7.25.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/slf4j-log4j12-1.7.25.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/xercesImpl-2.11.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/xml-apis-1.4.01.jar org.acoli.conll.rdf.CoNLLRDFFormatter -rdf WORD TOKEN LEMMA POS LEMPOS;
java -Dfile.encoding=UTF8 -classpath /mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/bin:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/collection-0.7.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/commons-cli-1.4.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/commons-codec-1.11.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/commons-io-2.6.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/commons-lang3-3.4.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/httpclient-4.5.3.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/httpclient-cache-4.5.3.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/httpcore-4.4.6.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jackson-annotations-2.9.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jackson-core-2.9.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jackson-databind-2.9.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jcl-over-slf4j-1.7.25.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-arq-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-base-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-core-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-dboe-base-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-dboe-index-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-dboe-trans-data-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-dboe-transaction-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-iri-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-shaded-guava-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-tdb-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jena-tdb2-3.6.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/jsonld-java-0.11.1.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/libthrift-0.10.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/log4j-1.2.17.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/slf4j-api-1.7.25.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/slf4j-log4j12-1.7.25.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/xercesImpl-2.11.0.jar:/mnt/c/Users/gonzalem/Desktop/Datathon/conll-rdf/lib/xml-apis-1.4.01.jar org.acoli.conll.rdf.CoNLLStreamExtractor https://githu .

# <doc title="Apple's New iPhones Face An Unfixable Design Problem" url="https://www.forbes.com/sites/gordonkelly/2019/02/28/apple-iphone-11-xs-max-xr-upgrade-5g-modem-qualcomm-intel/" genre="N/A" domain="N/A" country="United States of America" city="N/A" content_source="EventRegistry" document_source="forbes.com" time_of_publication="2019-03-01" month_of_publication="2019-03" time_of_crawling="2019-03" primary_doc_id="0509257193fc40f4ae72d50861c89fd2">
@prefix : <https://github.com/txellgb/sdllod19/datasets/oup/conll-rdf/0509257193fc40f4ae72d50861c89fd2#> .
@prefix terms: <http://purl.org/acoli/open-ie/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix conll: <http://ufal.mff.cuni.cz/conll2009-st/task-description.html#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix nif: <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .
:s1_0 a nif:Sentence .
:s1_1 a nif:Word; conll:WORD "The"; conll:TOKEN "The"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_2 .
:s1_2 a nif:Word; conll:WORD "ever-excellent"; conll:TOKEN "ever-excellent"; conll:LEMMA "ever-excellent"; conll:LEMPOS "ever-excellent-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_3 .
:s1_3 a nif:Word; conll:WORD "MacRumors"; conll:TOKEN "MacRumors"; conll:LEMMA "MacRumors"; conll:LEMPOS "MacRumors-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_4 .
:s1_4 a nif:Word; conll:WORD "has"; conll:TOKEN "has"; conll:LEMMA "have"; conll:LEMPOS "have-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_5 .
:s1_5 a nif:Word; conll:WORD "attained"; conll:TOKEN "attained"; conll:LEMMA "attain"; conll:LEMPOS "attain-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_6 .
:s1_6 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_7 .
:s1_7 a nif:Word; conll:WORD "new"; conll:TOKEN "new"; conll:LEMMA "new"; conll:LEMPOS "new-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_8 .
:s1_8 a nif:Word; conll:WORD "research"; conll:TOKEN "research"; conll:LEMMA "research"; conll:LEMPOS "research-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_9 .
:s1_9 a nif:Word; conll:WORD "note"; conll:TOKEN "note"; conll:LEMMA "note"; conll:LEMPOS "note-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_10 .
:s1_10 a nif:Word; conll:WORD "from"; conll:TOKEN "from"; conll:LEMMA "from"; conll:LEMPOS "from-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_11 .
:s1_11 a nif:Word; conll:WORD "financial"; conll:TOKEN "financial"; conll:LEMMA "financial"; conll:LEMPOS "financial-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_12 .
:s1_12 a nif:Word; conll:WORD "giant"; conll:TOKEN "giant"; conll:LEMMA "giant"; conll:LEMPOS "giant-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_13 .
:s1_13 a nif:Word; conll:WORD "Barclays"; conll:TOKEN "Barclays"; conll:LEMMA "Barclays"; conll:LEMPOS "Barclays-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_14 .
:s1_14 a nif:Word; conll:WORD "which"; conll:TOKEN "which"; conll:LEMMA "which"; conll:LEMPOS "which-d"; conll:HEAD :s1_0; conll:POS "WDT"; nif:nextWord :s1_15 .
:s1_15 a nif:Word; conll:WORD "reveals"; conll:TOKEN "reveals"; conll:LEMMA "reveal"; conll:LEMPOS "reveal-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_16 .
:s1_16 a nif:Word; conll:WORD "iPhones"; conll:TOKEN "iPhones"; conll:LEMMA "iphone"; conll:LEMPOS "iphone-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_17 .
:s1_17 a nif:Word; conll:WORD "will"; conll:TOKEN "will"; conll:LEMMA "will"; conll:LEMPOS "will-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_18 .
:s1_18 a nif:Word; conll:WORD "not"; conll:TOKEN "not"; conll:LEMMA "not"; conll:LEMPOS "not-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_19 .
:s1_19 a nif:Word; conll:WORD "only"; conll:TOKEN "only"; conll:LEMMA "only"; conll:LEMPOS "only-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_20 .
:s1_20 a nif:Word; conll:WORD "miss"; conll:TOKEN "miss"; conll:LEMMA "miss"; conll:LEMPOS "miss-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_21 .
:s1_21 a nif:Word; conll:WORD "out"; conll:TOKEN "out"; conll:LEMMA "out"; conll:LEMPOS "out-x"; conll:HEAD :s1_0; conll:POS "RP"; nif:nextWord :s1_22 .
:s1_22 a nif:Word; conll:WORD "on"; conll:TOKEN "on"; conll:LEMMA "on"; conll:LEMPOS "on-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_23 .
:s1_23 a nif:Word; conll:WORD "5G"; conll:TOKEN "5G"; conll:LEMMA "5g"; conll:LEMPOS "5g-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_24 .
:s1_24 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_25 .
:s1_25 a nif:Word; conll:WORD "2019"; conll:TOKEN "2019"; conll:LEMMA "2019"; conll:LEMPOS "2019-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_26 .
:s1_26 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_27 .
:s1_27 a nif:Word; conll:WORD "but"; conll:TOKEN "but"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_28 .
:s1_28 a nif:Word; conll:WORD "all"; conll:TOKEN "all"; conll:LEMMA "all"; conll:LEMPOS "all-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_29 .
:s1_29 a nif:Word; conll:WORD "2020"; conll:TOKEN "2020"; conll:LEMMA "2020"; conll:LEMPOS "2020-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_30 .
:s1_30 a nif:Word; conll:WORD "models"; conll:TOKEN "models"; conll:LEMMA "model"; conll:LEMPOS "model-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_31 .
:s1_31 a nif:Word; conll:WORD "may"; conll:TOKEN "may"; conll:LEMMA "may"; conll:LEMPOS "may-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_32 .
:s1_32 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_33 .
:s1_33 a nif:Word; conll:WORD "restricted"; conll:TOKEN "restricted"; conll:LEMMA "restricted"; conll:LEMPOS "restricted-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_34 .
:s1_34 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_35 .
:s1_35 a nif:Word; conll:WORD "4G"; conll:TOKEN "4G"; conll:LEMMA "4g"; conll:LEMPOS "4g-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_36 .
:s1_36 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_37 .
:s1_37 a nif:Word; conll:WORD "well"; conll:TOKEN "well"; conll:LEMMA "well"; conll:LEMPOS "well-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_38 .
:s1_38 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_39 .
:s1_39 a nif:Word; conll:WORD "Barclays"; conll:TOKEN "Barclays"; conll:LEMMA "Barclays"; conll:LEMPOS "Barclays-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_40 .
:s1_40 a nif:Word; conll:WORD "explains"; conll:TOKEN "explains"; conll:LEMMA "explain"; conll:LEMPOS "explain-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_41 .
:s1_41 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_42 .
:s1_42 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_43 .
:s1_43 a nif:Word; conll:WORD "modem"; conll:TOKEN "modem"; conll:LEMMA "modem"; conll:LEMPOS "modem-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_44 .
:s1_44 a nif:Word; conll:WORD "design"; conll:TOKEN "design"; conll:LEMMA "design"; conll:LEMPOS "design-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_45 .
:s1_45 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_46 .
:s1_46 a nif:Word; conll:WORD "2020"; conll:TOKEN "2020"; conll:LEMMA "2020"; conll:LEMPOS "2020-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_47 .
:s1_47 a nif:Word; conll:WORD "iPhones"; conll:TOKEN "iPhones"; conll:LEMMA "iphone"; conll:LEMPOS "iphone-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_48 .
:s1_48 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "``"; conll:LEMMA "``"; conll:LEMPOS "``-x"; conll:HEAD :s1_0; conll:POS "``"; nif:nextWord :s1_49 .
:s1_49 a nif:Word; conll:WORD "needs"; conll:TOKEN "needs"; conll:LEMMA "need"; conll:LEMPOS "need-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_50 .
:s1_50 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_51 .
:s1_51 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_52 .
:s1_52 a nif:Word; conll:WORD "set"; conll:TOKEN "set"; conll:LEMMA "set"; conll:LEMPOS "set-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_53 .
:s1_53 a nif:Word; conll:WORD "now"; conll:TOKEN "now"; conll:LEMMA "now"; conll:LEMPOS "now-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_54 .
:s1_54 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_55 .
:s1_55 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "''"; conll:LEMMA "''"; conll:LEMPOS "''-x"; conll:HEAD :s1_0; conll:POS "''"; nif:nextWord :s1_56 .
:s1_56 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_57 .
:s1_57 a nif:Word; conll:WORD "Intel"; conll:TOKEN "Intel"; conll:LEMMA "Intel"; conll:LEMPOS "Intel-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_58 .
:s1_58 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_59 .
:s1_59 a nif:Word; conll:WORD "race"; conll:TOKEN "race"; conll:LEMMA "race"; conll:LEMPOS "race-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_60 .
:s1_60 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_61 .
:s1_61 a nif:Word; conll:WORD "ship"; conll:TOKEN "ship"; conll:LEMMA "ship"; conll:LEMPOS "ship-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_62 .
:s1_62 a nif:Word; conll:WORD "its"; conll:TOKEN "its"; conll:LEMMA "its"; conll:LEMPOS "its-p"; conll:HEAD :s1_0; conll:POS "PRP$"; nif:nextWord :s1_63 .
:s1_63 a nif:Word; conll:WORD "first"; conll:TOKEN "first"; conll:LEMMA "first"; conll:LEMPOS "first-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_64 .
:s1_64 a nif:Word; conll:WORD "5G"; conll:TOKEN "5G"; conll:LEMMA "5g"; conll:LEMPOS "5g-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_65 .
:s1_65 a nif:Word; conll:WORD "smartphone"; conll:TOKEN "smartphone"; conll:LEMMA "smartphone"; conll:LEMPOS "smartphone-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_66 .
:s1_66 a nif:Word; conll:WORD "modem"; conll:TOKEN "modem"; conll:LEMMA "modem"; conll:LEMPOS "modem-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_67 .
:s1_67 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_68 .
:s1_68 a nif:Word; conll:WORD "late"; conll:TOKEN "late"; conll:LEMMA "late"; conll:LEMPOS "late-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_69 .
:s1_69 a nif:Word; conll:WORD "2019"; conll:TOKEN "2019"; conll:LEMMA "2019"; conll:LEMPOS "2019-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_70 .
:s1_70 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "``"; conll:LEMMA "``"; conll:LEMPOS "``-x"; conll:HEAD :s1_0; conll:POS "``"; nif:nextWord :s1_71 .
:s1_71 a nif:Word; conll:WORD "does"; conll:TOKEN "does"; conll:LEMMA "do"; conll:LEMPOS "do-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_72 .
:s1_72 a nif:Word; conll:WORD "not"; conll:TOKEN "not"; conll:LEMMA "not"; conll:LEMPOS "not-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_73 .
:s1_73 a nif:Word; conll:WORD "work"; conll:TOKEN "work"; conll:LEMMA "work"; conll:LEMPOS "work-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_74 .
:s1_74 a nif:Word; conll:WORD "with"; conll:TOKEN "with"; conll:LEMMA "with"; conll:LEMPOS "with-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_75 .
:s1_75 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_76 .
:s1_76 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_77 .
:s1_77 a nif:Word; conll:WORD "timeline"; conll:TOKEN "timeline"; conll:LEMMA "timeline"; conll:LEMPOS "timeline-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_78 .
:s1_78 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_79 .
:s1_79 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "''"; conll:LEMMA "''"; conll:LEMPOS "''-x"; conll:HEAD :s1_0; conll:POS "''"; nif:nextWord :s1_80 .
:s1_80 a nif:Word; conll:WORD "Compounding"; conll:TOKEN "Compounding"; conll:LEMMA "compound"; conll:LEMPOS "compound-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_81 .
:s1_81 a nif:Word; conll:WORD "this"; conll:TOKEN "this"; conll:LEMMA "this"; conll:LEMPOS "this-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_82 .
:s1_82 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_83 .
:s1_83 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_84 .
:s1_84 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_85 .
:s1_85 a nif:Word; conll:WORD "legal"; conll:TOKEN "legal"; conll:LEMMA "legal"; conll:LEMPOS "legal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_86 .
:s1_86 a nif:Word; conll:WORD "fight"; conll:TOKEN "fight"; conll:LEMMA "fight"; conll:LEMPOS "fight-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_87 .
:s1_87 a nif:Word; conll:WORD "with"; conll:TOKEN "with"; conll:LEMMA "with"; conll:LEMPOS "with-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_88 .
:s1_88 a nif:Word; conll:WORD "Qualcomm"; conll:TOKEN "Qualcomm"; conll:LEMMA "Qualcomm"; conll:LEMPOS "Qualcomm-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_89 .
:s1_89 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_90 .
:s1_90 a nif:Word; conll:WORD "The"; conll:TOKEN "The"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_91 .
:s1_91 a nif:Word; conll:WORD "chip"; conll:TOKEN "chip"; conll:LEMMA "chip"; conll:LEMPOS "chip-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_92 .
:s1_92 a nif:Word; conll:WORD "giant"; conll:TOKEN "giant"; conll:LEMMA "giant"; conll:LEMPOS "giant-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_93 .
:s1_93 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_94 .
:s1_94 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_95 .
:s1_95 a nif:Word; conll:WORD "obvious"; conll:TOKEN "obvious"; conll:LEMMA "obvious"; conll:LEMPOS "obvious-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_96 .
:s1_96 a nif:Word; conll:WORD "alternative"; conll:TOKEN "alternative"; conll:LEMMA "alternative"; conll:LEMPOS "alternative-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_97 .
:s1_97 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_98 .
:s1_98 a nif:Word; conll:WORD "its"; conll:TOKEN "its"; conll:LEMMA "its"; conll:LEMPOS "its-p"; conll:HEAD :s1_0; conll:POS "PRP$"; nif:nextWord :s1_99 .
:s1_99 a nif:Word; conll:WORD "5G"; conll:TOKEN "5G"; conll:LEMMA "5g"; conll:LEMPOS "5g-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_100 .
:s1_100 a nif:Word; conll:WORD "modems"; conll:TOKEN "modems"; conll:LEMMA "modem"; conll:LEMPOS "modem-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_101 .
:s1_101 a nif:Word; conll:WORD "are"; conll:TOKEN "are"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_102 .
:s1_102 a nif:Word; conll:WORD "commercially"; conll:TOKEN "commercially"; conll:LEMMA "commercially"; conll:LEMPOS "commercially-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_103 .
:s1_103 a nif:Word; conll:WORD "ready"; conll:TOKEN "ready"; conll:LEMMA "ready"; conll:LEMPOS "ready-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_104 .
:s1_104 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_105 .
:s1_105 a nif:Word; conll:WORD "Unfortunately"; conll:TOKEN "Unfortunately"; conll:LEMMA "unfortunately"; conll:LEMPOS "unfortunately-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_106 .
:s1_106 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_107 .
:s1_107 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_108 .
:s1_108 a nif:Word; conll:WORD "two"; conll:TOKEN "two"; conll:LEMMA "two"; conll:LEMPOS "two-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_109 .
:s1_109 a nif:Word; conll:WORD "companies"; conll:TOKEN "companies"; conll:LEMMA "company"; conll:LEMPOS "company-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_110 .
:s1_110 a nif:Word; conll:WORD "are"; conll:TOKEN "are"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_111 .
:s1_111 a nif:Word; conll:WORD "engaged"; conll:TOKEN "engaged"; conll:LEMMA "engage"; conll:LEMPOS "engage-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_112 .
:s1_112 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_113 .
:s1_113 a nif:Word; conll:WORD "a"; conll:TOKEN "a"; conll:LEMMA "a"; conll:LEMPOS "a-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_114 .
:s1_114 a nif:Word; conll:WORD "ferocious"; conll:TOKEN "ferocious"; conll:LEMMA "ferocious"; conll:LEMPOS "ferocious-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_115 .
:s1_115 a nif:Word; conll:WORD "legal"; conll:TOKEN "legal"; conll:LEMMA "legal"; conll:LEMPOS "legal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_116 .
:s1_116 a nif:Word; conll:WORD "battle"; conll:TOKEN "battle"; conll:LEMMA "battle"; conll:LEMPOS "battle-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_117 .
:s1_117 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_118 .
:s1_118 a nif:Word; conll:WORD "Barclays"; conll:TOKEN "Barclays"; conll:LEMMA "Barclays"; conll:LEMPOS "Barclays-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_119 .
:s1_119 a nif:Word; conll:WORD "states"; conll:TOKEN "states"; conll:LEMMA "state"; conll:LEMPOS "state-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_120 .
:s1_120 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_121 .
:s1_121 a nif:Word; conll:WORD "time"; conll:TOKEN "time"; conll:LEMMA "time"; conll:LEMPOS "time-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_122 .
:s1_122 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "``"; conll:LEMMA "``"; conll:LEMPOS "``-x"; conll:HEAD :s1_0; conll:POS "``"; nif:nextWord :s1_123 .
:s1_123 a nif:Word; conll:WORD "seems"; conll:TOKEN "seems"; conll:LEMMA "seem"; conll:LEMPOS "seem-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_124 .
:s1_124 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_125 .
:s1_125 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_126 .
:s1_126 a nif:Word; conll:WORD "running"; conll:TOKEN "running"; conll:LEMMA "run"; conll:LEMPOS "run-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_127 .
:s1_127 a nif:Word; conll:WORD "out"; conll:TOKEN "out"; conll:LEMMA "out"; conll:LEMPOS "out-x"; conll:HEAD :s1_0; conll:POS "RP"; nif:nextWord :s1_128 .
:s1_128 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "''"; conll:LEMMA "''"; conll:LEMPOS "''-x"; conll:HEAD :s1_0; conll:POS "''"; nif:nextWord :s1_129 .
:s1_129 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_130 .
:s1_130 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_131 .
:s1_131 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_132 .
:s1_132 a nif:Word; conll:WORD "patch"; conll:TOKEN "patch"; conll:LEMMA "patch"; conll:LEMPOS "patch-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_133 .
:s1_133 a nif:Word; conll:WORD "up"; conll:TOKEN "up"; conll:LEMMA "up"; conll:LEMPOS "up-x"; conll:HEAD :s1_0; conll:POS "RP"; nif:nextWord :s1_134 .
:s1_134 a nif:Word; conll:WORD "differences"; conll:TOKEN "differences"; conll:LEMMA "difference"; conll:LEMPOS "difference-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_135 .
:s1_135 a nif:Word; conll:WORD "with"; conll:TOKEN "with"; conll:LEMMA "with"; conll:LEMPOS "with-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_136 .
:s1_136 a nif:Word; conll:WORD "Qualcomm"; conll:TOKEN "Qualcomm"; conll:LEMMA "Qualcomm"; conll:LEMPOS "Qualcomm-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_137 .
:s1_137 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_138 .
:s1_138 a nif:Word; conll:WORD "plug"; conll:TOKEN "plug"; conll:LEMMA "plug"; conll:LEMPOS "plug-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_139 .
:s1_139 a nif:Word; conll:WORD "its"; conll:TOKEN "its"; conll:LEMMA "its"; conll:LEMPOS "its-p"; conll:HEAD :s1_0; conll:POS "PRP$"; nif:nextWord :s1_140 .
:s1_140 a nif:Word; conll:WORD "Intel-shaped"; conll:TOKEN "Intel-shaped"; conll:LEMMA "intel-shaped"; conll:LEMPOS "intel-shaped-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_141 .
:s1_141 a nif:Word; conll:WORD "gap"; conll:TOKEN "gap"; conll:LEMMA "gap"; conll:LEMPOS "gap-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_142 .
:s1_142 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_143 .
:s1_143 a nif:Word; conll:WORD "It"; conll:TOKEN "It"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_144 .
:s1_144 a nif:Word; conll:WORD "also"; conll:TOKEN "also"; conll:LEMMA "also"; conll:LEMPOS "also-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_145 .
:s1_145 a nif:Word; conll:WORD "seems"; conll:TOKEN "seems"; conll:LEMMA "seem"; conll:LEMPOS "seem-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_146 .
:s1_146 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_147 .
:s1_147 a nif:Word; conll:WORD "has"; conll:TOKEN "has"; conll:LEMMA "have"; conll:LEMPOS "have-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_148 .
:s1_148 a nif:Word; conll:WORD "exhausted"; conll:TOKEN "exhausted"; conll:LEMMA "exhaust"; conll:LEMPOS "exhaust-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_149 .
:s1_149 a nif:Word; conll:WORD "all"; conll:TOKEN "all"; conll:LEMMA "all"; conll:LEMPOS "all-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_150 .
:s1_150 a nif:Word; conll:WORD "alternative"; conll:TOKEN "alternative"; conll:LEMMA "alternative"; conll:LEMPOS "alternative-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_151 .
:s1_151 a nif:Word; conll:WORD "avenues"; conll:TOKEN "avenues"; conll:LEMMA "avenue"; conll:LEMPOS "avenue-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_152 .
:s1_152 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_153 .
:s1_153 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_154 .
:s1_154 a nif:Word; conll:WORD "testified"; conll:TOKEN "testified"; conll:LEMMA "testify"; conll:LEMPOS "testify-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_155 .
:s1_155 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_156 .
:s1_156 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_157 .
:s1_157 a nif:Word; conll:WORD "approached"; conll:TOKEN "approached"; conll:LEMMA "approach"; conll:LEMPOS "approach-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_158 .
:s1_158 a nif:Word; conll:WORD "Samsung"; conll:TOKEN "Samsung"; conll:LEMMA "Samsung"; conll:LEMPOS "Samsung-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_159 .
:s1_159 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_160 .
:s1_160 a nif:Word; conll:WORD "MediaTek"; conll:TOKEN "MediaTek"; conll:LEMMA "MediaTek"; conll:LEMPOS "MediaTek-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_161 .
:s1_161 a nif:Word; conll:WORD "as"; conll:TOKEN "as"; conll:LEMMA "as"; conll:LEMPOS "as-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_162 .
:s1_162 a nif:Word; conll:WORD "potential"; conll:TOKEN "potential"; conll:LEMMA "potential"; conll:LEMPOS "potential-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_163 .
:s1_163 a nif:Word; conll:WORD "suppliers"; conll:TOKEN "suppliers"; conll:LEMMA "supplier"; conll:LEMPOS "supplier-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_164 .
:s1_164 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_165 .
:s1_165 a nif:Word; conll:WORD "but"; conll:TOKEN "but"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_166 .
:s1_166 a nif:Word; conll:WORD "doubts"; conll:TOKEN "doubts"; conll:LEMMA "doubt"; conll:LEMPOS "doubt-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_167 .
:s1_167 a nif:Word; conll:WORD "have"; conll:TOKEN "have"; conll:LEMMA "have"; conll:LEMPOS "have-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_168 .
:s1_168 a nif:Word; conll:WORD "emerged"; conll:TOKEN "emerged"; conll:LEMMA "emerge"; conll:LEMPOS "emerge-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_169 .
:s1_169 a nif:Word; conll:WORD "that"; conll:TOKEN "that"; conll:LEMMA "that"; conll:LEMPOS "that-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_170 .
:s1_170 a nif:Word; conll:WORD "they"; conll:TOKEN "they"; conll:LEMMA "they"; conll:LEMPOS "they-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_171 .
:s1_171 a nif:Word; conll:WORD "can"; conll:TOKEN "can"; conll:LEMMA "can"; conll:LEMPOS "can-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_172 .
:s1_172 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "``"; conll:LEMMA "``"; conll:LEMPOS "``-x"; conll:HEAD :s1_0; conll:POS "``"; nif:nextWord :s1_173 .
:s1_173 a nif:Word; conll:WORD "meet"; conll:TOKEN "meet"; conll:LEMMA "meet"; conll:LEMPOS "meet-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_174 .
:s1_174 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_175 .
:s1_175 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_176 .
:s1_176 a nif:Word; conll:WORD "production"; conll:TOKEN "production"; conll:LEMMA "production"; conll:LEMPOS "production-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_177 .
:s1_177 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_178 .
:s1_178 a nif:Word; conll:WORD "performance"; conll:TOKEN "performance"; conll:LEMMA "performance"; conll:LEMPOS "performance-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_179 .
:s1_179 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_180 .
:s1_180 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_181 .
:s1_181 a nif:Word; conll:WORD "cost"; conll:TOKEN "cost"; conll:LEMMA "cost"; conll:LEMPOS "cost-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_182 .
:s1_182 a nif:Word; conll:WORD "demands"; conll:TOKEN "demands"; conll:LEMMA "demand"; conll:LEMPOS "demand-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_183 .
:s1_183 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_184 .
:s1_184 a nif:Word; conll:WORD "&quot;"; conll:TOKEN "''"; conll:LEMMA "''"; conll:LEMPOS "''-x"; conll:HEAD :s1_0; conll:POS "''"; nif:nextWord :s1_185 .
:s1_185 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_186 .
:s1_186 a nif:Word; conll:WORD "has"; conll:TOKEN "has"; conll:LEMMA "have"; conll:LEMPOS "have-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_187 .
:s1_187 a nif:Word; conll:WORD "even"; conll:TOKEN "even"; conll:LEMMA "even"; conll:LEMPOS "even-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_188 .
:s1_188 a nif:Word; conll:WORD "started"; conll:TOKEN "started"; conll:LEMMA "start"; conll:LEMPOS "start-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_189 .
:s1_189 a nif:Word; conll:WORD "working"; conll:TOKEN "working"; conll:LEMMA "work"; conll:LEMPOS "work-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_190 .
:s1_190 a nif:Word; conll:WORD "on"; conll:TOKEN "on"; conll:LEMMA "on"; conll:LEMPOS "on-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_191 .
:s1_191 a nif:Word; conll:WORD "its"; conll:TOKEN "its"; conll:LEMMA "its"; conll:LEMPOS "its-p"; conll:HEAD :s1_0; conll:POS "PRP$"; nif:nextWord :s1_192 .
:s1_192 a nif:Word; conll:WORD "own"; conll:TOKEN "own"; conll:LEMMA "own"; conll:LEMPOS "own-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_193 .
:s1_193 a nif:Word; conll:WORD "modems"; conll:TOKEN "modems"; conll:LEMMA "modem"; conll:LEMPOS "modem-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_194 .
:s1_194 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_195 .
:s1_195 a nif:Word; conll:WORD "but"; conll:TOKEN "but"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_196 .
:s1_196 a nif:Word; conll:WORD "they"; conll:TOKEN "they"; conll:LEMMA "they"; conll:LEMPOS "they-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_197 .
:s1_197 a nif:Word; conll:WORD "are"; conll:TOKEN "are"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBP"; nif:nextWord :s1_198 .
:s1_198 a nif:Word; conll:WORD "years"; conll:TOKEN "years"; conll:LEMMA "year"; conll:LEMPOS "year-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_199 .
:s1_199 a nif:Word; conll:WORD "away"; conll:TOKEN "away"; conll:LEMMA "away"; conll:LEMPOS "away-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_200 .
:s1_200 a nif:Word; conll:WORD "from"; conll:TOKEN "from"; conll:LEMMA "from"; conll:LEMPOS "from-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_201 .
:s1_201 a nif:Word; conll:WORD "commercial"; conll:TOKEN "commercial"; conll:LEMMA "commercial"; conll:LEMPOS "commercial-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_202 .
:s1_202 a nif:Word; conll:WORD "release"; conll:TOKEN "release"; conll:LEMMA "release"; conll:LEMPOS "release-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_203 .
:s1_203 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_204 .
:s1_204 a nif:Word; conll:WORD "The"; conll:TOKEN "The"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_205 .
:s1_205 a nif:Word; conll:WORD "good"; conll:TOKEN "good"; conll:LEMMA "good"; conll:LEMPOS "good-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_206 .
:s1_206 a nif:Word; conll:WORD "news"; conll:TOKEN "news"; conll:LEMMA "news"; conll:LEMPOS "news-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_207 .
:s1_207 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_208 .
:s1_208 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_209 .
:s1_209 a nif:Word; conll:WORD "should"; conll:TOKEN "should"; conll:LEMMA "should"; conll:LEMPOS "should-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_210 .
:s1_210 a nif:Word; conll:WORD "get"; conll:TOKEN "get"; conll:LEMMA "get"; conll:LEMPOS "get-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_211 .
:s1_211 a nif:Word; conll:WORD "away"; conll:TOKEN "away"; conll:LEMMA "away"; conll:LEMPOS "away-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_212 .
:s1_212 a nif:Word; conll:WORD "with"; conll:TOKEN "with"; conll:LEMMA "with"; conll:LEMPOS "with-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_213 .
:s1_213 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_214 .
:s1_214 a nif:Word; conll:WORD "this"; conll:TOKEN "this"; conll:LEMMA "this"; conll:LEMPOS "this-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_215 .
:s1_215 a nif:Word; conll:WORD "year"; conll:TOKEN "year"; conll:LEMMA "year"; conll:LEMPOS "year-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_216 .
:s1_216 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_217 .
:s1_217 a nif:Word; conll:WORD "While"; conll:TOKEN "While"; conll:LEMMA "while"; conll:LEMPOS "while-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_218 .
:s1_218 a nif:Word; conll:WORD "5G"; conll:TOKEN "5G"; conll:LEMMA "5g"; conll:LEMPOS "5g-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_219 .
:s1_219 a nif:Word; conll:WORD "phones"; conll:TOKEN "phones"; conll:LEMMA "phone"; conll:LEMPOS "phone-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_220 .
:s1_220 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_221 .
:s1_221 a nif:Word; conll:WORD "5G"; conll:TOKEN "5G"; conll:LEMMA "5g"; conll:LEMPOS "5g-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_222 .
:s1_222 a nif:Word; conll:WORD "networks"; conll:TOKEN "networks"; conll:LEMMA "network"; conll:LEMPOS "network-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_223 .
:s1_223 a nif:Word; conll:WORD "will"; conll:TOKEN "will"; conll:LEMMA "will"; conll:LEMPOS "will-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_224 .
:s1_224 a nif:Word; conll:WORD "both"; conll:TOKEN "both"; conll:LEMMA "both"; conll:LEMPOS "both-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_225 .
:s1_225 a nif:Word; conll:WORD "launch"; conll:TOKEN "launch"; conll:LEMMA "launch"; conll:LEMPOS "launch-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_226 .
:s1_226 a nif:Word; conll:WORD "this"; conll:TOKEN "this"; conll:LEMMA "this"; conll:LEMPOS "this-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_227 .
:s1_227 a nif:Word; conll:WORD "year"; conll:TOKEN "year"; conll:LEMMA "year"; conll:LEMPOS "year-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_228 .
:s1_228 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_229 .
:s1_229 a nif:Word; conll:WORD "availability"; conll:TOKEN "availability"; conll:LEMMA "availability"; conll:LEMPOS "availability-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_230 .
:s1_230 a nif:Word; conll:WORD "will"; conll:TOKEN "will"; conll:LEMMA "will"; conll:LEMPOS "will-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_231 .
:s1_231 a nif:Word; conll:WORD "be"; conll:TOKEN "be"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_232 .
:s1_232 a nif:Word; conll:WORD "limited"; conll:TOKEN "limited"; conll:LEMMA "limit"; conll:LEMPOS "limit-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_233 .
:s1_233 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_234 .
:s1_234 a nif:Word; conll:WORD "But"; conll:TOKEN "But"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_235 .
:s1_235 a nif:Word; conll:WORD "this"; conll:TOKEN "this"; conll:LEMMA "this"; conll:LEMPOS "this-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_236 .
:s1_236 a nif:Word; conll:WORD "changes"; conll:TOKEN "changes"; conll:LEMMA "change"; conll:LEMPOS "change-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_237 .
:s1_237 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_238 .
:s1_238 a nif:Word; conll:WORD "2020"; conll:TOKEN "2020"; conll:LEMMA "2020"; conll:LEMPOS "2020-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_239 .
:s1_239 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_240 .
:s1_240 a nif:Word; conll:WORD "releasing"; conll:TOKEN "releasing"; conll:LEMMA "release"; conll:LEMPOS "release-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_241 .
:s1_241 a nif:Word; conll:WORD "premium"; conll:TOKEN "premium"; conll:LEMMA "premium"; conll:LEMPOS "premium-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_242 .
:s1_242 a nif:Word; conll:WORD "iPhones"; conll:TOKEN "iPhones"; conll:LEMMA "iphone"; conll:LEMPOS "iphone-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_243 .
:s1_243 a nif:Word; conll:WORD "without"; conll:TOKEN "without"; conll:LEMMA "without"; conll:LEMPOS "without-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_244 .
:s1_244 a nif:Word; conll:WORD "5G"; conll:TOKEN "5G"; conll:LEMMA "5g"; conll:LEMPOS "5g-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_245 .
:s1_245 a nif:Word; conll:WORD "for"; conll:TOKEN "for"; conll:LEMMA "for"; conll:LEMPOS "for-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_246 .
:s1_246 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_247 .
:s1_247 a nif:Word; conll:WORD "October"; conll:TOKEN "October"; conll:LEMMA "October"; conll:LEMPOS "October-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_248 .
:s1_248 a nif:Word; conll:WORD "2020"; conll:TOKEN "2020"; conll:LEMMA "2020"; conll:LEMPOS "2020-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_249 .
:s1_249 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_250 .
:s1_250 a nif:Word; conll:WORD "October"; conll:TOKEN "October"; conll:LEMMA "October"; conll:LEMPOS "October-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_251 .
:s1_251 a nif:Word; conll:WORD "2021"; conll:TOKEN "2021"; conll:LEMMA "2021"; conll:LEMPOS "2021-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_252 .
:s1_252 a nif:Word; conll:WORD "lifecycle"; conll:TOKEN "lifecycle"; conll:LEMMA "lifecycle"; conll:LEMPOS "lifecycle-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_253 .
:s1_253 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_254 .
:s1_254 a nif:Word; conll:WORD "marketing"; conll:TOKEN "marketing"; conll:LEMMA "market"; conll:LEMPOS "market-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_255 .
:s1_255 a nif:Word; conll:WORD "suicide"; conll:TOKEN "suicide"; conll:LEMMA "suicide"; conll:LEMPOS "suicide-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_256 .
:s1_256 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_257 .
:s1_257 a nif:Word; conll:WORD "When"; conll:TOKEN "When"; conll:LEMMA "when"; conll:LEMPOS "when-r"; conll:HEAD :s1_0; conll:POS "WRB"; nif:nextWord :s1_258 .
:s1_258 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_259 .
:s1_259 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_260 .
:s1_260 a nif:Word; conll:WORD "Qualcomm"; conll:TOKEN "Qualcomm"; conll:LEMMA "Qualcomm"; conll:LEMPOS "Qualcomm-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_261 .
:s1_261 a nif:Word; conll:WORD "kicked"; conll:TOKEN "kicked"; conll:LEMMA "kick"; conll:LEMPOS "kick-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_262 .
:s1_262 a nif:Word; conll:WORD "off"; conll:TOKEN "off"; conll:LEMMA "off"; conll:LEMPOS "off-x"; conll:HEAD :s1_0; conll:POS "RP"; nif:nextWord :s1_263 .
:s1_263 a nif:Word; conll:WORD "their"; conll:TOKEN "their"; conll:LEMMA "they"; conll:LEMPOS "they-p"; conll:HEAD :s1_0; conll:POS "PRP$"; nif:nextWord :s1_264 .
:s1_264 a nif:Word; conll:WORD "legal"; conll:TOKEN "legal"; conll:LEMMA "legal"; conll:LEMPOS "legal-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_265 .
:s1_265 a nif:Word; conll:WORD "battle"; conll:TOKEN "battle"; conll:LEMMA "battle"; conll:LEMPOS "battle-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_266 .
:s1_266 a nif:Word; conll:WORD "in"; conll:TOKEN "in"; conll:LEMMA "in"; conll:LEMPOS "in-i"; conll:HEAD :s1_0; conll:POS "IN"; nif:nextWord :s1_267 .
:s1_267 a nif:Word; conll:WORD "2017"; conll:TOKEN "2017"; conll:LEMMA "2017"; conll:LEMPOS "2017-f"; conll:HEAD :s1_0; conll:POS "CD"; nif:nextWord :s1_268 .
:s1_268 a nif:Word; conll:WORD ","; conll:TOKEN ","; conll:LEMMA ","; conll:LEMPOS ",-x"; conll:HEAD :s1_0; conll:POS ","; nif:nextWord :s1_269 .
:s1_269 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_270 .
:s1_270 a nif:Word; conll:WORD "was"; conll:TOKEN "was"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_271 .
:s1_271 a nif:Word; conll:WORD "widely"; conll:TOKEN "widely"; conll:LEMMA "widely"; conll:LEMPOS "widely-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_272 .
:s1_272 a nif:Word; conll:WORD "assumed"; conll:TOKEN "assumed"; conll:LEMMA "assume"; conll:LEMPOS "assume-v"; conll:HEAD :s1_0; conll:POS "VBN"; nif:nextWord :s1_273 .
:s1_273 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_274 .
:s1_274 a nif:Word; conll:WORD "had"; conll:TOKEN "had"; conll:LEMMA "have"; conll:LEMPOS "have-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_275 .
:s1_275 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_276 .
:s1_276 a nif:Word; conll:WORD "upper"; conll:TOKEN "upper"; conll:LEMMA "upper"; conll:LEMPOS "upper-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_277 .
:s1_277 a nif:Word; conll:WORD "hand"; conll:TOKEN "hand"; conll:LEMMA "hand"; conll:LEMPOS "hand-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_278 .
:s1_278 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_279 .
:s1_279 a nif:Word; conll:WORD "But"; conll:TOKEN "But"; conll:LEMMA "but"; conll:LEMPOS "but-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_280 .
:s1_280 a nif:Word; conll:WORD "it"; conll:TOKEN "it"; conll:LEMMA "it"; conll:LEMPOS "it-p"; conll:HEAD :s1_0; conll:POS "PRP"; nif:nextWord :s1_281 .
:s1_281 a nif:Word; conll:WORD "appears"; conll:TOKEN "appears"; conll:LEMMA "appear"; conll:LEMPOS "appear-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_282 .
:s1_282 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_283 .
:s1_283 a nif:Word; conll:WORD "technological"; conll:TOKEN "technological"; conll:LEMMA "technological"; conll:LEMPOS "technological-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_284 .
:s1_284 a nif:Word; conll:WORD "tide"; conll:TOKEN "tide"; conll:LEMMA "tide"; conll:LEMPOS "tide-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_285 .
:s1_285 a nif:Word; conll:WORD "is"; conll:TOKEN "is"; conll:LEMMA "be"; conll:LEMPOS "be-v"; conll:HEAD :s1_0; conll:POS "VBZ"; nif:nextWord :s1_286 .
:s1_286 a nif:Word; conll:WORD "turning"; conll:TOKEN "turning"; conll:LEMMA "turn"; conll:LEMPOS "turn-v"; conll:HEAD :s1_0; conll:POS "VBG"; nif:nextWord :s1_287 .
:s1_287 a nif:Word; conll:WORD "quickly"; conll:TOKEN "quickly"; conll:LEMMA "quickly"; conll:LEMPOS "quickly-r"; conll:HEAD :s1_0; conll:POS "RB"; nif:nextWord :s1_288 .
:s1_288 a nif:Word; conll:WORD "."; conll:TOKEN "."; conll:LEMMA "."; conll:LEMPOS ".-x"; conll:HEAD :s1_0; conll:POS "."; nif:nextWord :s1_289 .
:s1_289 a nif:Word; conll:WORD "Recent"; conll:TOKEN "Recent"; conll:LEMMA "recent"; conll:LEMPOS "recent-j"; conll:HEAD :s1_0; conll:POS "JJ"; nif:nextWord :s1_290 .
:s1_290 a nif:Word; conll:WORD "Qualcomm"; conll:TOKEN "Qualcomm"; conll:LEMMA "Qualcomm"; conll:LEMPOS "Qualcomm-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_291 .
:s1_291 a nif:Word; conll:WORD "victories"; conll:TOKEN "victories"; conll:LEMMA "victory"; conll:LEMPOS "victory-n"; conll:HEAD :s1_0; conll:POS "NNS"; nif:nextWord :s1_292 .
:s1_292 a nif:Word; conll:WORD "infuriated"; conll:TOKEN "infuriated"; conll:LEMMA "infuriate"; conll:LEMPOS "infuriate-v"; conll:HEAD :s1_0; conll:POS "VBD"; nif:nextWord :s1_293 .
:s1_293 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_294 .
:s1_294 a nif:Word; conll:WORD "and"; conll:TOKEN "and"; conll:LEMMA "and"; conll:LEMPOS "and-c"; conll:HEAD :s1_0; conll:POS "CC"; nif:nextWord :s1_295 .
:s1_295 a nif:Word; conll:WORD "today"; conll:TOKEN "today"; conll:LEMMA "today"; conll:LEMPOS "today-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_296 .
:s1_296 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_297 .
:s1_297 a nif:Word; conll:WORD "news"; conll:TOKEN "news"; conll:LEMMA "news"; conll:LEMPOS "news-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_298 .
:s1_298 a nif:Word; conll:WORD "will"; conll:TOKEN "will"; conll:LEMMA "will"; conll:LEMPOS "will-v"; conll:HEAD :s1_0; conll:POS "MD"; nif:nextWord :s1_299 .
:s1_299 a nif:Word; conll:WORD "do"; conll:TOKEN "do"; conll:LEMMA "do"; conll:LEMPOS "do-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_300 .
:s1_300 a nif:Word; conll:WORD "nothing"; conll:TOKEN "nothing"; conll:LEMMA "nothing"; conll:LEMPOS "nothing-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_301 .
:s1_301 a nif:Word; conll:WORD "to"; conll:TOKEN "to"; conll:LEMMA "to"; conll:LEMPOS "to-t"; conll:HEAD :s1_0; conll:POS "TO"; nif:nextWord :s1_302 .
:s1_302 a nif:Word; conll:WORD "improve"; conll:TOKEN "improve"; conll:LEMMA "improve"; conll:LEMPOS "improve-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_303 .
:s1_303 a nif:Word; conll:WORD "the"; conll:TOKEN "the"; conll:LEMMA "the"; conll:LEMPOS "the-d"; conll:HEAD :s1_0; conll:POS "DT"; nif:nextWord :s1_304 .
:s1_304 a nif:Word; conll:WORD "company"; conll:TOKEN "company"; conll:LEMMA "company"; conll:LEMPOS "company-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_305 .
:s1_305 a nif:Word; conll:WORD "'s"; conll:TOKEN "'s"; conll:LEMMA "'s"; conll:LEMPOS "'s-p"; conll:HEAD :s1_0; conll:POS "POS"; nif:nextWord :s1_306 .
:s1_306 a nif:Word; conll:WORD "mood"; conll:TOKEN "mood"; conll:LEMMA "mood"; conll:LEMPOS "mood-n"; conll:HEAD :s1_0; conll:POS "NN"; nif:nextWord :s1_307 .
:s1_307 a nif:Word; conll:WORD "..."; conll:TOKEN "..."; conll:LEMMA "..."; conll:LEMPOS "...-x"; conll:HEAD :s1_0; conll:POS ":"; nif:nextWord :s1_308 .
:s1_308 a nif:Word; conll:WORD "Apple"; conll:TOKEN "Apple"; conll:LEMMA "Apple"; conll:LEMPOS "Apple-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_309 .
:s1_309 a nif:Word; conll:WORD "Patents"; conll:TOKEN "Patents"; conll:LEMMA "Patents"; conll:LEMPOS "Patents-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_310 .
:s1_310 a nif:Word; conll:WORD "New"; conll:TOKEN "New"; conll:LEMMA "New"; conll:LEMPOS "New-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_311 .
:s1_311 a nif:Word; conll:WORD "iPhone"; conll:TOKEN "iPhone"; conll:LEMMA "iPhone"; conll:LEMPOS "iPhone-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_312 .
:s1_312 a nif:Word; conll:WORD "Laser"; conll:TOKEN "Laser"; conll:LEMMA "Laser"; conll:LEMPOS "Laser-e"; conll:HEAD :s1_0; conll:POS "NNP"; nif:nextWord :s1_313 .
:s1_313 a nif:Word; conll:WORD "Display"; conll:TOKEN "Display"; conll:LEMMA "display"; conll:LEMPOS "display-v"; conll:HEAD :s1_0; conll:POS "VB"; nif:nextWord :s1_314 .
:s1_314 a nif:Word; conll:WORD "Upgrade"; conll:TOKEN "Upgrade"; conll:LEMMA "upgrade"; conll:LEMPOS "upgrade-v"; conll:HEAD :s1_0; conll:POS "VB" .

